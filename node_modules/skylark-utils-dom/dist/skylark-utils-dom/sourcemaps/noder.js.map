{"version":3,"sources":["noder.js"],"names":["define","dom","langx","browser","styler","isIE","navigator","userAgent","match","fragmentRE","singleTagRE","div","document","createElement","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","Array","prototype","slice","ensureNodes","nodes","copyByClone","isArrayLike","call","node","cloneNode","flatten","append","placing","parentNode","i","length","appendChild","this","tag","props","parent","name","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","elm","nodeType","ownerDocument","noder","mixin","active","doc","el","activeElement","error","body","nodeName","blur","clone","deep","self","each","getAttribs","attr","setAttrib","getAttrib","contents","chkName","toLowerCase","undefined","contentDocument","childNodes","createFragment","html","trim","test","RegExp","$1","container","innerHTML","forEach","removeChild","child","createTextNode","text","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","apply","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","requestFullScreen","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","disabled","closest","visible","isString","replace","isNumber","isDoc","DOCUMENT_NODE","isWindow","offsetParent","css","ownerWindow","defaultView","parentWindow","after","refNode","nextSibling","insertBefore","before","prepend","remove","e","console","warn","children","oldNode","replaceChild","throb","params","timer","style","time","callback","throbber","className","overlayDiv","position","top","left","width","height","zIndex","opacity","overlay","textNode","clearTimeout","setTimeout","update","nodeValue","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap"],"mappings":"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","file":"../noder.js","sourcesContent":["define([\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});"]}