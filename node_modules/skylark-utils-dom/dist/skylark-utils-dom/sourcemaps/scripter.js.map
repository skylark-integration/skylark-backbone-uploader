{"version":3,"sources":["scripter.js"],"names":["define","dom","langx","noder","finder","head","document","getElementsByTagName","scriptsByUrl","scriptElementsById","count","scripter","mixin","loadJavaScript","url","loadedCallback","errorCallback","script","state","loadedCallbacks","errorCallbacks","push","node","onload","onerror","createElement","id","type","async","defer","startTime","Date","getTime","appendChild","callbacks","i","length","src","deleteJavaScript","remove"],"mappings":";;;;;;;AAAAA,QACI,QACA,UACA,UACA,YACD,SAASC,EAAKC,EAAOC,EAAOC,GAE3B,IAAIC,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,KACAC,KACAC,EAAQ,EAEZ,SAASC,IACL,OAAOA,EAiFX,OA9EAT,EAAMU,MAAMD,GAORE,eAAgB,SAASC,EAAKC,EAAgBC,GAC1C,IAAIC,EAAST,EAAaM,GAY1B,GAXKG,IACDA,EAAST,EAAaM,IAClBI,MAAO,EACPC,mBACAC,oBAIRH,EAAOE,gBAAgBE,KAAKN,GAC5BE,EAAOG,eAAeC,KAAKL,GAEN,IAAjBC,EAAOC,MACPD,EAAOK,KAAKC,cACT,IAAsB,IAAlBN,EAAOC,MACdD,EAAOK,KAAKE,cACT,CACH,IAAIF,EAAOL,EAAOK,KAAOhB,SAASmB,cAAc,UAC5CC,EAAKT,EAAOS,GAAMhB,IAEtBY,EAAKK,KAAO,kBACZL,EAAKM,OAAQ,EACbN,EAAKO,OAAQ,EACbC,WAAY,IAAIC,MAAOC,UACvB3B,EAAK4B,YAAYX,GAEjBA,EAAKC,OAAS,WACNN,EAAOC,MAAQ,EAKf,IAHA,IAAIgB,EAAYjB,EAAOE,gBACnBgB,EAAID,EAAUE,OAEXD,KACHD,EAAUC,KAEdlB,EAAOE,mBACPF,EAAOG,mBAEXE,EAAKE,QAAU,WACXP,EAAOC,OAAS,EAIhB,IAHA,IAAIgB,EAAYjB,EAAOG,eACnBe,EAAID,EAAUE,OAEXD,KACHD,EAAUC,KAEdlB,EAAOE,mBACPF,EAAOG,mBAEfE,EAAKe,IAAMvB,EAEXL,EAAmBiB,GAAMJ,EAE7B,OAAOL,EAAOS,IAMlBY,iBAAkB,SAASZ,GACvB,IAAIJ,EAAOb,EAAmBiB,GAC9B,GAAIJ,EAAM,CACN,IAAIR,EAAMQ,EAAKe,IACflC,EAAMoC,OAAOjB,UACNb,EAAmBiB,UACnBlB,EAAaM,OAKzBb,EAAIU,SAAWA","file":"../scripter.js","sourcesContent":["define([\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(dom, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return dom.scripter = scripter;\r\n});"]}