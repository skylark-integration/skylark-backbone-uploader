{"version":3,"sources":["fx.js"],"names":["define","dom","langx","browser","geom","styler","eventer","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","normalizeCssEvent","transitionEnd","supportedTransforms","transform","css3PropPrefix","cssReset","animate","elm","properties","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","isPlainObject","easing","complete","isString","fx","speeds","undefined","normal","off","isFunction","eace","v","test","top","right","bottom","left","css","size","width","height","push","dasherize","join","event","target","currentTarget","call","on","debounce","clientLeft","scrollToTop","show","speed","opacity","scale","hide","pos","scrollFrom","parseInt","scrollTop","i","freq","scrollTo","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","options","slideDown","position","visibility","marginTop","marginBottom","paddingTop","paddingBottom","overflow","apply","slideUp","queue","normalizeCssProperty","mixin","fast","slow","emulateTransitionEnd","called","one","setTimeout","trigger","fadeToggle","ceasing","allback","isInvisible","slideToggle","toggle"],"mappings":"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","file":"../fx.js","sourcesContent":["define([\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,'transitionEnd') \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});"]}