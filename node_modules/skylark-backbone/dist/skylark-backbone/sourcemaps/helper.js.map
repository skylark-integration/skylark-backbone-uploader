{"version":3,"sources":["helper.js"],"names":["define","langx","_","Backbone","cb","iteratee","instance","isFunction","isObject","_isModel","modelMatcher","isString","model","get","attrs","matcher","matches","attributes","addUnderscoreMethods","Class","methods","attribute","each","length","method","prototype","this","value","context","defaultVal","args","slice","call","arguments","unshift","apply","addMethod","extend","protoProps","staticProps","constructor","_constructor","child","inherit"],"mappings":";;;;;;;AAAAA,QACE,sBACA,gCACA,cACA,SAASC,EAAMC,EAAEC,GASjB,IA6BIC,EAAK,SAASC,EAAUC,GAC1B,OAAIJ,EAAEK,WAAWF,GAAkBA,EAC/BH,EAAEM,SAASH,KAAcC,EAASG,SAASJ,GAAkBK,EAAaL,GAC1EH,EAAES,SAASN,GAAkB,SAASO,GAAS,OAAOA,EAAMC,IAAIR,IAC7DA,GAGLK,EAAe,SAASI,GAC1B,IAAIC,EAAUb,EAAEc,QAAQF,GACxB,OAAO,SAASF,GACd,OAAOG,EAAQH,EAAMK,cAYzB,OACEC,qBA9ByB,SAASC,EAAOC,EAASC,GAClDnB,EAAEoB,KAAKF,EAAS,SAASG,EAAQC,GAC3BtB,EAAEsB,KAASL,EAAMM,UAAUD,GAxBnB,SAASD,EAAQC,EAAQH,GACvC,OAAQE,GACN,KAAK,EAAG,OAAO,WACb,OAAOrB,EAAEsB,GAAQE,KAAKL,KAExB,KAAK,EAAG,OAAO,SAASM,GACtB,OAAOzB,EAAEsB,GAAQE,KAAKL,GAAYM,IAEpC,KAAK,EAAG,OAAO,SAAStB,EAAUuB,GAChC,OAAO1B,EAAEsB,GAAQE,KAAKL,GAAYjB,EAAGC,EAAUqB,MAAOE,IAExD,KAAK,EAAG,OAAO,SAASvB,EAAUwB,EAAYD,GAC5C,OAAO1B,EAAEsB,GAAQE,KAAKL,GAAYjB,EAAGC,EAAUqB,MAAOG,EAAYD,IAEpE,QAAS,OAAO,WACd,IAAIE,EAAOC,MAAMC,KAAKC,WAEtB,OADAH,EAAKI,QAAQR,KAAKL,IACXnB,EAAEsB,GAAQW,MAAMjC,EAAG4B,KAOaM,CAAUb,EAAQC,EAAQH,OA6BrEgB,OAVYlC,EAASkC,OAAS,SAASC,EAAYC,GACnDD,EAAWE,YAAcd,KAAKe,aAC9B,IAAIC,EAAQhB,KAAKiB,QAAQL,GAGzB,OAFApC,EAAEmC,OAAOK,EAAMH,GAERG","file":"../helper.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\"\r\n],function(langx,_,Backbone){\r\n\r\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\r\n  // `attributes` object or collection's `models` array behind the scenes.\r\n  //\r\n  // collection.filter(function(model) { return model.get('age') > 10 });\r\n  // collection.each(this.addView);\r\n  //\r\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\r\n  var addMethod = function(length, method, attribute) {\r\n    switch (length) {\r\n      case 1: return function() {\r\n        return _[method](this[attribute]);\r\n      };\r\n      case 2: return function(value) {\r\n        return _[method](this[attribute], value);\r\n      };\r\n      case 3: return function(iteratee, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), context);\r\n      };\r\n      case 4: return function(iteratee, defaultVal, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\r\n      };\r\n      default: return function() {\r\n        var args = slice.call(arguments);\r\n        args.unshift(this[attribute]);\r\n        return _[method].apply(_, args);\r\n      };\r\n    }\r\n  };\r\n\r\n  var addUnderscoreMethods = function(Class, methods, attribute) {\r\n    _.each(methods, function(length, method) {\r\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\r\n    });\r\n  };\r\n\r\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\r\n  var cb = function(iteratee, instance) {\r\n    if (_.isFunction(iteratee)) return iteratee;\r\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\r\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\r\n    return iteratee;\r\n  };\r\n\r\n  var modelMatcher = function(attrs) {\r\n    var matcher = _.matches(attrs);\r\n    return function(model) {\r\n      return matcher(model.attributes);\r\n    };\r\n  };\r\n\r\n  var extend  = Backbone.extend = function(protoProps, staticProps){\r\n    protoProps.constructor = this._constructor;\r\n    var child = this.inherit(protoProps);\r\n    _.extend(child,staticProps);\r\n  \r\n    return child;\r\n  };\r\n\r\n  return {\r\n    addUnderscoreMethods : addUnderscoreMethods,\r\n    extend : extend\r\n  };\r\n});"]}