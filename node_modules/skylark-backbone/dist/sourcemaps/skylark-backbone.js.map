{"version":3,"sources":["skylark-backbone.js"],"names":["define","skylark","models","$","Backbone","backbone","emulateHTTP","emulateJSON","sync","method","entity","options","langx","defaults","backends","ajaxSync","apply","this","slice","Array","prototype","EventExtends","on","name","callback","context","fn","args","call","arguments","unshift","type","_","overrided","once","one","bind","unbind","off","stopListening","obj","unlistenTo","BackboneEvented","Evented","inherit","EventedProto","Events","listenTo","listenToOnce","trigger","extend","cb","iteratee","instance","isFunction","isObject","_isModel","modelMatcher","isString","model","get","attrs","matcher","matches","attributes","protoProps","staticProps","constructor","_constructor","child","addUnderscoreMethods","Class","methods","attribute","each","length","value","defaultVal","addMethod","events","helper","Collection","_construct","comparator","_reset","initialize","reset","silent","partial","Object","defineProperty","[object Object]","newValue","entities","modelId","entityId","_isEntity","forEach","map","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","all","some","any","include","includes","contains","invoke","max","min","toArray","size","first","head","take","initial","rest","tail","drop","last","without","difference","indexOf","shuffle","lastIndexOf","isEmpty","chain","sample","partition","groupBy","countBy","sortBy","indexBy","findIndex","findLastIndex","Model","Entity","Stateful","escape","attr","History","handlers","checkUrl","window","location","history","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","replace","root","getSearch","matchRoot","decodeFragment","rootPath","fragment","decodeURI","match","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","Error","hashChange","_hasHashChange","document","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","navigate","iframe","createElement","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","eventName","listener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","route","e","current","handler","test","url","title","assign","_updateHash","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","isRegExp","_routeToRegExp","router","_extractParameters","execute","concat","result","keys","pop","optional","RegExp","params","exec","param","i","decodeURIComponent","noder","plugins","View","Plugin","cid","uniqueId","preinitialize","pick","viewOptions","_ensureElement","tagName","selector","$el","render","remove","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","key","delegateEventSplitter","delegate","proxy","uid","undelegate","_createElement","mixin","id","className","_setAttributes","main"],"mappings":"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","file":"../skylark-backbone.js","sourcesContent":["define('skylark-backbone/backbone',[\r\n\t\"skylark-langx/skylark\",\r\n    \"skylark-fw-model\",\r\n\t\"skylark-jquery\"\r\n],function(skylark, models,$){\r\n//     from Backbone.js 1.2.3\r\n\r\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Backbone may be freely distributed under the MIT license.\r\n//     For all details and documentation:\r\n//     http://backbonejs.org\r\n\tvar Backbone = skylark.backbone = {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n\t}\r\n    \r\n    Backbone.$ = $;\r\n\r\n    Backbone.sync =    function(method, entity, options) {\r\n\t    // Default options, unless specified.\r\n\t    langx.defaults(options || (options = {}), {\r\n\t      emulateHTTP: Backbone.emulateHTTP,\r\n\t      emulateJSON: Backbone.emulateJSON\r\n\t    });\r\n\t    return models.backends.ajaxSync.apply(this,[method,entity,options]);\r\n\t};\r\n\r\n\r\n\treturn Backbone ;\r\n});\ndefine('skylark-backbone/events',[\r\n  \"skylark-langx/langx\",\r\n  \"./backbone\"\r\n],function(langx,Backbone){\r\n  // Create a local reference to a common array method we'll want to use later.\r\n  var slice = Array.prototype.slice;\r\n\r\n  // Backbone.Events\r\n\r\n  var EventExtends = {\r\n      on  : function(name, callback, context){\r\n          var fn =  function() {\r\n            var args = slice.call(arguments,1);\r\n            if (name==\"all\") {\r\n              args.unshift(arguments[0].type);\r\n            }\r\n            callback.apply(this, args);\r\n          };\r\n          fn._ = callback\r\n          \r\n          return this.overrided(name,fn,context);\r\n      },\r\n        \r\n      once : function(name, callback, context) {\r\n        return this.one(name,callback,context);\r\n      },\r\n      bind : function(name, callback, context) {\r\n          return this.on(name,callback,context);\r\n      },\r\n      \r\n      unbind : function(name, callback, context){\r\n          return this.off(name,callback,context);\r\n      },\r\n    \r\n      stopListening : function(obj, name, callback){\r\n        return this.unlistenTo(obj,name,callback);\r\n      }\r\n   },\r\n\r\n  BackboneEvented = langx.Evented.inherit(EventExtends),\r\n\r\n  EventedProto = BackboneEvented.prototype;\r\n  \r\n  var Events = Backbone.Events = {\r\n     bind: EventedProto.bind,\r\n     listenTo: EventedProto.listenTo,\r\n     listenToOnce: EventedProto.listenToOnce,\r\n     off: EventedProto.off,\r\n     on : EventedProto.on,\r\n     once: EventedProto.once,\r\n     stopListening: EventedProto.stopListening,\r\n     trigger: EventedProto.trigger,\r\n     unbind: EventedProto.unbind,\r\n     unlistenTo: EventedProto.unlistenTo\r\n  };\r\n\r\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\r\n  // want global \"pubsub\" in a convenient place.\r\n  langx.extend(Backbone, Events);\r\n\r\n  return {\r\n    EventExtends : EventExtends,\r\n    BackboneEvented : BackboneEvented\r\n  };\r\n\r\n});\ndefine('skylark-backbone/helper',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\"\r\n],function(langx,_,Backbone){\r\n\r\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\r\n  // `attributes` object or collection's `models` array behind the scenes.\r\n  //\r\n  // collection.filter(function(model) { return model.get('age') > 10 });\r\n  // collection.each(this.addView);\r\n  //\r\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\r\n  var addMethod = function(length, method, attribute) {\r\n    switch (length) {\r\n      case 1: return function() {\r\n        return _[method](this[attribute]);\r\n      };\r\n      case 2: return function(value) {\r\n        return _[method](this[attribute], value);\r\n      };\r\n      case 3: return function(iteratee, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), context);\r\n      };\r\n      case 4: return function(iteratee, defaultVal, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\r\n      };\r\n      default: return function() {\r\n        var args = slice.call(arguments);\r\n        args.unshift(this[attribute]);\r\n        return _[method].apply(_, args);\r\n      };\r\n    }\r\n  };\r\n\r\n  var addUnderscoreMethods = function(Class, methods, attribute) {\r\n    _.each(methods, function(length, method) {\r\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\r\n    });\r\n  };\r\n\r\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\r\n  var cb = function(iteratee, instance) {\r\n    if (_.isFunction(iteratee)) return iteratee;\r\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\r\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\r\n    return iteratee;\r\n  };\r\n\r\n  var modelMatcher = function(attrs) {\r\n    var matcher = _.matches(attrs);\r\n    return function(model) {\r\n      return matcher(model.attributes);\r\n    };\r\n  };\r\n\r\n  var extend  = Backbone.extend = function(protoProps, staticProps){\r\n    protoProps.constructor = this._constructor;\r\n    var child = this.inherit(protoProps);\r\n    _.extend(child,staticProps);\r\n  \r\n    return child;\r\n  };\r\n\r\n  return {\r\n    addUnderscoreMethods : addUnderscoreMethods,\r\n    extend : extend\r\n  };\r\n});\ndefine('skylark-backbone/Collection',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-fw-model\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,models,Backbone,events,helper){\r\n\r\n  // Backbone.Collection\r\n  // -------------------\r\n\r\n  // If models tend to represent a single row of data, a Backbone Collection is\r\n  // more analogous to a table full of data ... or a small slice or page of that\r\n  // table, or a collection of rows that belong together for a particular reason\r\n  // -- all of the messages in this particular folder, all of the documents\r\n  // belonging to this particular author, and so on. Collections maintain\r\n  // indexes of their models, both in order, and for lookup by `id`.\r\n\r\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\r\n  // If a `comparator` is specified, the Collection will maintain\r\n  // its models in sort order, as they're added and removed.\r\n\r\n  var Collection = Backbone.Collection = models.Collection.inherit({\r\n      _construct : function(models, options) {\r\n        options || (options = {});\r\n        if (options.model) this.model = options.model;\r\n        if (options.comparator !== void 0) this.comparator = options.comparator;\r\n        this._reset();\r\n        this.initialize.apply(this, arguments);\r\n        if (models) this.reset(models, _.extend({silent: true}, options));\r\n      },\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      sync: function() {\r\n        return Backbone.sync.apply(this, arguments);\r\n      }\r\n\r\n  });\r\n\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial(events.EventExtends);\r\n\r\n  Object.defineProperty(Collection.prototype, \"model\",{\r\n    get() { return this.entity; },\r\n    set(newValue) { this.entity = newValue; }\r\n  });\r\n\r\n  Object.defineProperty(Collection.prototype, \"models\",{\r\n    get() { return this.entities; },\r\n    set(newValue) { this.entities = newValue; }\r\n  });\r\n\r\n  Collection.prototype.modelId = Collection.prototype.entityId;\r\n  Collection.prototype._isModel = Collection.prototype._isEntity;\r\n\r\n\r\n  // Underscore methods that we want to implement on the Collection.\r\n  // 90% of the core usefulness of Backbone Collections is actually implemented\r\n  // right here:\r\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\r\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\r\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\r\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\r\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\r\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\r\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\r\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\r\n\r\n  // Mix in each Underscore method as a proxy to `Collection#models`.\r\n  helper.addUnderscoreMethods(Collection, collectionMethods, 'models');\r\n\r\n  Collection.extend = helper.extend;\r\n\r\n  return Collection;\r\n\r\n});\ndefine('skylark-backbone/Model',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"skylark-fw-model\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,_,models,Backbone,events,helper){\r\n\r\n  // Backbone.Model\r\n  // --------------\r\n\r\n  // Backbone **Models** are the basic data object in the framework --\r\n  // frequently representing a row in a table in a database on your server.\r\n  // A discrete chunk of data and a bunch of useful, related methods for\r\n  // performing computations and transformations on that data.\r\n\r\n  // Create a new model with the specified attributes. A client id (`cid`)\r\n  // is automatically generated and assigned for you.\r\n  var Model = Backbone.Model = models.Entity.inherit({\r\n      _construct : function(attributes, options) {\r\n        langx.Stateful.prototype._construct.apply(this,arguments);\r\n        this.initialize.apply(this, arguments);\r\n      },\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      // Get the HTML-escaped value of an attribute.\r\n      escape: function(attr) {\r\n        return _.escape(this.get(attr));\r\n      },\r\n\r\n      // Special-cased proxy to underscore's `_.matches` method.\r\n      matches: function(attrs) {\r\n        return !!_.iteratee(attrs, this)(this.attributes);\r\n      },\r\n\r\n      // Proxy `Backbone.sync` by default.\r\n      sync: function() {\r\n        return Backbone.sync.apply(this, arguments);\r\n      }\r\n });\r\n\r\n\r\n\r\n  // Attach all inheritable methods to the Model prototype.\r\n  Model.partial(events.EventExtends);\r\n\r\n  Model.extend = helper.extend;\r\n\r\n  return Model;\r\n});\ndefine('skylark-backbone/History',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,_,Backbone,events,helper){\r\n\r\n // Backbone.History\r\n  // ----------------\r\n\r\n  // Handles cross-browser history management, based on either\r\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\r\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\r\n  // and URL fragments. If the browser supports neither (old IE, natch),\r\n  // falls back to polling.\r\n  var History = Backbone.History = events.BackboneEvented.inherit({\r\n    _construct : function() {\r\n        this.handlers = [];\r\n        this.checkUrl = _.bind(this.checkUrl, this);\r\n    \r\n        // Ensure that `History` can be used outside of the browser.\r\n        if (typeof window !== 'undefined') {\r\n          this.location = window.location;\r\n          this.history = window.history;\r\n        }\r\n    }\r\n  });\r\n\r\n  // Cached regex for stripping a leading hash/slash and trailing space.\r\n  var routeStripper = /^[#\\/]|\\s+$/g;\r\n\r\n  // Cached regex for stripping leading and trailing slashes.\r\n  var rootStripper = /^\\/+|\\/+$/g;\r\n\r\n  // Cached regex for stripping urls of hash.\r\n  var pathStripper = /#.*$/;\r\n\r\n  // Has the history handling already been started?\r\n  History.started = false;\r\n\r\n  // Set up all inheritable **Backbone.History** properties and methods.\r\n  History.partial({\r\n\r\n    // The default interval to poll for hash changes, if necessary, is\r\n    // twenty times a second.\r\n    interval: 50,\r\n\r\n    // Are we at the app root?\r\n    atRoot: function() {\r\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\r\n      return path === this.root && !this.getSearch();\r\n    },\r\n\r\n    // Does the pathname match the root?\r\n    matchRoot: function() {\r\n      var path = this.decodeFragment(this.location.pathname);\r\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\r\n      return rootPath === this.root;\r\n    },\r\n\r\n    // Unicode characters in `location.pathname` are percent encoded so they're\r\n    // decoded for comparison. `%25` should not be decoded since it may be part\r\n    // of an encoded parameter.\r\n    decodeFragment: function(fragment) {\r\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\r\n    },\r\n\r\n    // In IE6, the hash fragment and search params are incorrect if the\r\n    // fragment contains `?`.\r\n    getSearch: function() {\r\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\r\n      return match ? match[0] : '';\r\n    },\r\n\r\n    // Gets the true hash value. Cannot use location.hash directly due to bug\r\n    // in Firefox where location.hash will always be decoded.\r\n    getHash: function(window) {\r\n      var match = (window || this).location.href.match(/#(.*)$/);\r\n      return match ? match[1] : '';\r\n    },\r\n\r\n    // Get the pathname and search params, without the root.\r\n    getPath: function() {\r\n      var path = this.decodeFragment(\r\n        this.location.pathname + this.getSearch()\r\n      ).slice(this.root.length - 1);\r\n      return path.charAt(0) === '/' ? path.slice(1) : path;\r\n    },\r\n\r\n    // Get the cross-browser normalized URL fragment from the path or hash.\r\n    getFragment: function(fragment) {\r\n      if (fragment == null) {\r\n        if (this._usePushState || !this._wantsHashChange) {\r\n          fragment = this.getPath();\r\n        } else {\r\n          fragment = this.getHash();\r\n        }\r\n      }\r\n      return fragment.replace(routeStripper, '');\r\n    },\r\n\r\n    // Start the hash change handling, returning `true` if the current URL matches\r\n    // an existing route, and `false` otherwise.\r\n    start: function(options) {\r\n      if (History.started) throw new Error('Backbone.history has already been started');\r\n      History.started = true;\r\n\r\n      // Figure out the initial configuration. Do we need an iframe?\r\n      // Is pushState desired ... is it available?\r\n      this.options          = _.extend({root: '/'}, this.options, options);\r\n      this.root             = this.options.root;\r\n      this._wantsHashChange = this.options.hashChange !== false;\r\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\r\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\r\n      this._wantsPushState  = !!this.options.pushState;\r\n      this._hasPushState    = !!(this.history && this.history.pushState);\r\n      this._usePushState    = this._wantsPushState && this._hasPushState;\r\n      this.fragment         = this.getFragment();\r\n\r\n      // Normalize root to always include a leading and trailing slash.\r\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\r\n\r\n      // Transition from hashChange to pushState or vice versa if both are\r\n      // requested.\r\n      if (this._wantsHashChange && this._wantsPushState) {\r\n\r\n        // If we've started off with a route from a `pushState`-enabled\r\n        // browser, but we're currently in a browser that doesn't support it...\r\n        if (!this._hasPushState && !this.atRoot()) {\r\n          var rootPath = this.root.slice(0, -1) || '/';\r\n          this.location.replace(rootPath + '#' + this.getPath());\r\n          // Return immediately as browser will do redirect to new url\r\n          return true;\r\n\r\n        // Or if we've started out with a hash-based route, but we're currently\r\n        // in a browser where it could be `pushState`-based instead...\r\n        } else if (this._hasPushState && this.atRoot()) {\r\n          this.navigate(this.getHash(), {replace: true});\r\n        }\r\n\r\n      }\r\n\r\n      // Proxy an iframe to handle location events if the browser doesn't\r\n      // support the `hashchange` event, HTML5 history, or the user wants\r\n      // `hashChange` but not `pushState`.\r\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\r\n        this.iframe = document.createElement('iframe');\r\n        this.iframe.src = 'javascript:0';\r\n        this.iframe.style.display = 'none';\r\n        this.iframe.tabIndex = -1;\r\n        var body = document.body;\r\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\r\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\r\n        iWindow.document.open();\r\n        iWindow.document.close();\r\n        iWindow.location.hash = '#' + this.fragment;\r\n      }\r\n\r\n      // Add a cross-platform `addEventListener` shim for older browsers.\r\n      var addEventListener = window.addEventListener || function(eventName, listener) {\r\n        return attachEvent('on' + eventName, listener);\r\n      };\r\n\r\n      // Depending on whether we're using pushState or hashes, and whether\r\n      // 'onhashchange' is supported, determine how we check the URL state.\r\n      if (this._usePushState) {\r\n        addEventListener('popstate', this.checkUrl, false);\r\n      } else if (this._useHashChange && !this.iframe) {\r\n        addEventListener('hashchange', this.checkUrl, false);\r\n      } else if (this._wantsHashChange) {\r\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\r\n      }\r\n\r\n      if (!this.options.silent) return this.loadUrl();\r\n    },\r\n\r\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\r\n    // but possibly useful for unit testing Routers.\r\n    stop: function() {\r\n      // Add a cross-platform `removeEventListener` shim for older browsers.\r\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\r\n        return detachEvent('on' + eventName, listener);\r\n      };\r\n\r\n      // Remove window listeners.\r\n      if (this._usePushState) {\r\n        removeEventListener('popstate', this.checkUrl, false);\r\n      } else if (this._useHashChange && !this.iframe) {\r\n        removeEventListener('hashchange', this.checkUrl, false);\r\n      }\r\n\r\n      // Clean up the iframe if necessary.\r\n      if (this.iframe) {\r\n        document.body.removeChild(this.iframe);\r\n        this.iframe = null;\r\n      }\r\n\r\n      // Some environments will throw when clearing an undefined interval.\r\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\r\n      History.started = false;\r\n    },\r\n\r\n    // Add a route to be tested when the fragment changes. Routes added later\r\n    // may override previous routes.\r\n    route: function(route, callback) {\r\n      this.handlers.unshift({route: route, callback: callback});\r\n    },\r\n\r\n    // Checks the current URL to see if it has changed, and if it has,\r\n    // calls `loadUrl`, normalizing across the hidden iframe.\r\n    checkUrl: function(e) {\r\n      var current = this.getFragment();\r\n\r\n      // If the user pressed the back button, the iframe's hash will have\r\n      // changed and we should use that for comparison.\r\n      if (current === this.fragment && this.iframe) {\r\n        current = this.getHash(this.iframe.contentWindow);\r\n      }\r\n\r\n      if (current === this.fragment) return false;\r\n      if (this.iframe) this.navigate(current);\r\n      this.loadUrl();\r\n    },\r\n\r\n    // Attempt to load the current URL fragment. If a route succeeds with a\r\n    // match, returns `true`. If no defined routes matches the fragment,\r\n    // returns `false`.\r\n    loadUrl: function(fragment) {\r\n      // If the root doesn't match, no routes can match either.\r\n      if (!this.matchRoot()) return false;\r\n      fragment = this.fragment = this.getFragment(fragment);\r\n      return _.some(this.handlers, function(handler) {\r\n        if (handler.route.test(fragment)) {\r\n          handler.callback(fragment);\r\n          return true;\r\n        }\r\n      });\r\n    },\r\n\r\n    // Save a fragment into the hash history, or replace the URL state if the\r\n    // 'replace' option is passed. You are responsible for properly URL-encoding\r\n    // the fragment in advance.\r\n    //\r\n    // The options object can contain `trigger: true` if you wish to have the\r\n    // route callback be fired (not usually desirable), or `replace: true`, if\r\n    // you wish to modify the current URL without adding an entry to the history.\r\n    navigate: function(fragment, options) {\r\n      if (!History.started) return false;\r\n      if (!options || options === true) options = {trigger: !!options};\r\n\r\n      // Normalize the fragment.\r\n      fragment = this.getFragment(fragment || '');\r\n\r\n      // Don't include a trailing slash on the root.\r\n      var rootPath = this.root;\r\n      if (fragment === '' || fragment.charAt(0) === '?') {\r\n        rootPath = rootPath.slice(0, -1) || '/';\r\n      }\r\n      var url = rootPath + fragment;\r\n\r\n      // Strip the hash and decode for matching.\r\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\r\n\r\n      if (this.fragment === fragment) return;\r\n      this.fragment = fragment;\r\n\r\n      // If pushState is available, we use it to set the fragment as a real URL.\r\n      if (this._usePushState) {\r\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\r\n\r\n      // If hash changes haven't been explicitly disabled, update the hash\r\n      // fragment to store history.\r\n      } else if (this._wantsHashChange) {\r\n        this._updateHash(this.location, fragment, options.replace);\r\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\r\n          var iWindow = this.iframe.contentWindow;\r\n\r\n          // Opening and closing the iframe tricks IE7 and earlier to push a\r\n          // history entry on hash-tag change.  When replace is true, we don't\r\n          // want this.\r\n          if (!options.replace) {\r\n            iWindow.document.open();\r\n            iWindow.document.close();\r\n          }\r\n\r\n          this._updateHash(iWindow.location, fragment, options.replace);\r\n        }\r\n\r\n      // If you've told us that you explicitly don't want fallback hashchange-\r\n      // based history, then `navigate` becomes a page refresh.\r\n      } else {\r\n        return this.location.assign(url);\r\n      }\r\n      if (options.trigger) return this.loadUrl(fragment);\r\n    },\r\n\r\n    // Update the hash location, either replacing the current entry, or adding\r\n    // a new one to the browser history.\r\n    _updateHash: function(location, fragment, replace) {\r\n      if (replace) {\r\n        var href = location.href.replace(/(javascript:|#).*$/, '');\r\n        location.replace(href + '#' + fragment);\r\n      } else {\r\n        // Some browsers require that `hash` contains a leading #.\r\n        location.hash = '#' + fragment;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // Create the default Backbone.history.\r\n  Backbone.history = new History;\r\n\r\n  // Set up inheritance for the model, collection, router, view and history.\r\n  History.extend = Backbone.extend ;\r\n\r\n\r\n  return History;\r\n\r\n});\r\n\r\n\ndefine('skylark-backbone/Router',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,_,Backbone,events,helper){\r\n\r\n  // Backbone.Router\r\n  // ---------------\r\n\r\n  // Routers map faux-URLs to actions, and fire events when routes are\r\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\r\n  var Router = Backbone.Router = events.BackboneEvented.inherit({\r\n    _construct : function(options) {\r\n        options || (options = {});\r\n        if (options.routes) this.routes = options.routes;\r\n        this._bindRoutes();\r\n        this.initialize.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n\r\n  // Cached regular expressions for matching named param parts and splatted\r\n  // parts of route strings.\r\n  var optionalParam = /\\((.*?)\\)/g;\r\n  var namedParam    = /(\\(\\?)?:\\w+/g;\r\n  var splatParam    = /\\*\\w+/g;\r\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\n\r\n  // Set up all inheritable **Backbone.Router** properties and methods.\r\n  Router.partial({\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // Manually bind a single named route to a callback. For example:\r\n    //\r\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\r\n    //       ...\r\n    //     });\r\n    //\r\n    route: function(route, name, callback) {\r\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\r\n      if (_.isFunction(name)) {\r\n        callback = name;\r\n        name = '';\r\n      }\r\n      if (!callback) callback = this[name];\r\n      var router = this;\r\n      Backbone.history.route(route, function(fragment) {\r\n        var args = router._extractParameters(route, fragment);\r\n        if (router.execute(callback, args, name) !== false) {\r\n          router.trigger.apply(router, ['route:' + name].concat(args));\r\n          router.trigger('route', name, args);\r\n          Backbone.history.trigger('route', router, name, args);\r\n        }\r\n      });\r\n      return this;\r\n    },\r\n\r\n    // Execute a route handler with the provided parameters.  This is an\r\n    // excellent place to do pre-route setup or post-route cleanup.\r\n    execute: function(callback, args, name) {\r\n      if (callback) callback.apply(this, args);\r\n    },\r\n\r\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\r\n    navigate: function(fragment, options) {\r\n      Backbone.history.navigate(fragment, options);\r\n      return this;\r\n    },\r\n\r\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\r\n    // order of the routes here to support behavior where the most general\r\n    // routes can be defined at the bottom of the route map.\r\n    _bindRoutes: function() {\r\n      if (!this.routes) return;\r\n      this.routes = _.result(this, 'routes');\r\n      var route, routes = _.keys(this.routes);\r\n      while ((route = routes.pop()) != null) {\r\n        this.route(route, this.routes[route]);\r\n      }\r\n    },\r\n\r\n    // Convert a route string into a regular expression, suitable for matching\r\n    // against the current location hash.\r\n    _routeToRegExp: function(route) {\r\n      route = route.replace(escapeRegExp, '\\\\$&')\r\n                   .replace(optionalParam, '(?:$1)?')\r\n                   .replace(namedParam, function(match, optional) {\r\n                     return optional ? match : '([^/?]+)';\r\n                   })\r\n                   .replace(splatParam, '([^?]*?)');\r\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\r\n    },\r\n\r\n    // Given a route, and a URL fragment that it matches, return the array of\r\n    // extracted decoded parameters. Empty or unmatched parameters will be\r\n    // treated as `null` to normalize cross-browser behavior.\r\n    _extractParameters: function(route, fragment) {\r\n      var params = route.exec(fragment).slice(1);\r\n      return _.map(params, function(param, i) {\r\n        // Don't decode the search params.\r\n        if (i === params.length - 1) return param || null;\r\n        return param ? decodeURIComponent(param) : null;\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  // Set up inheritance for the model, collection, router, view and history.\r\n  Router.extend = helper.extend;\r\n\r\n\r\n  return Router;\r\n\r\n});\r\n\r\n\ndefine('skylark-backbone/View',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx, $,noder,plugins,_,Backbone,events,helper){\r\n  // Backbone.View\r\n  // -------------\r\n\r\n  // Backbone Views are almost more convention than they are actual code. A View\r\n  // is simply a JavaScript object that represents a logical chunk of UI in the\r\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\r\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\r\n  // UI as a **View** allows you to define your DOM events declaratively, without\r\n  // having to worry about render order ... and makes it easy for the view to\r\n  // react to specific changes in the state of your models.\r\n\r\n  // Creating a Backbone.View creates its initial element outside of the DOM,\r\n  // if an existing element is not provided...\r\n\r\n    var View = Backbone.View = plugins.Plugin.inherit({\r\n      _construct :function(options) {\r\n          this.cid = _.uniqueId('view');\r\n          this.preinitialize.apply(this, arguments);\r\n          _.extend(this, _.pick(options, viewOptions));\r\n          this._ensureElement();\r\n          this.initialize.apply(this, arguments);\r\n\r\n      },\r\n\r\n      // The default `tagName` of a View's element is `\"div\"`.\r\n      tagName: 'div',\r\n\r\n      // query delegate for element lookup, scoped to DOM elements within the\r\n      // current view. This should be preferred to global lookups where possible.\r\n      $: function(selector) {\r\n        return this.$el.find(selector);\r\n      },\r\n\r\n      // preinitialize is an empty function by default. You can override it with a function\r\n      // or object.  preinitialize will run before any instantiation logic is run in the View\r\n      preinitialize: function(){},\r\n\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      // **render** is the core function that your view should override, in order\r\n      // to populate its element (`this.el`), with the appropriate HTML. The\r\n      // convention is for **render** to always return `this`.\r\n      render: function() {\r\n        return this;\r\n      },\r\n\r\n      // Remove this view by taking the element out of the DOM, and removing any\r\n      // applicable Backbone.Events listeners.\r\n      remove: function() {\r\n        this._removeElement();\r\n        this.unlistenTo();\r\n        return this;\r\n      },\r\n\r\n      // Remove this view's element from the document and all event listeners\r\n      // attached to it. Exposed for subclasses using an alternative DOM\r\n      // manipulation API.\r\n      _removeElement: function() {\r\n        this.$el.remove();\r\n      },\r\n\r\n      // Change the view's element (`this.el` property) and re-delegate the\r\n      // view's events on the new element.\r\n      setElement: function(element) {\r\n        this.undelegateEvents();\r\n        this._setElement(element);\r\n        this.delegateEvents();\r\n        return this;\r\n      },\r\n\r\n      // Creates the `this.el` and `this.$el` references for this view using the\r\n      // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n      // context or an element. Subclasses can override this to utilize an\r\n      // alternative DOM manipulation API and are only required to set the\r\n      // `this.el` property.\r\n      _setElement: function(el) {\r\n        this.$el = $(el);\r\n        this.el = this.$el[0];\r\n      },\r\n\r\n      // Set callbacks, where `this.events` is a hash of\r\n      //\r\n      // *{\"event selector\": \"callback\"}*\r\n      //\r\n      //     {\r\n      //       'mousedown .title':  'edit',\r\n      //       'click .button':     'save',\r\n      //       'click .open':       function(e) { ... }\r\n      //     }\r\n      //\r\n      // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n      // Uses event delegation for efficiency.\r\n      // Omitting the selector binds the event to `this.el`.\r\n      delegateEvents: function(events) {\r\n        events || (events = langx.result(this, 'events'));\r\n        if (!events) return this;\r\n        this.undelegateEvents();\r\n        for (var key in events) {\r\n          var method = events[key];\r\n          if (!langx.isFunction(method)) method = this[method];\r\n          if (!method) continue;\r\n          var match = key.match(delegateEventSplitter);\r\n          this.delegate(match[1], match[2], langx.proxy(method, this));\r\n        }\r\n        return this;\r\n      },\r\n\r\n      // Add a single event listener to the view's element (or a child element\r\n      // using `selector`). This only works for delegate-able events: not `focus`,\r\n      // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n      delegate: function(eventName, selector, listener) {\r\n        this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n      // You usually don't need to use this, but may wish to if you have multiple\r\n      // Backbone views attached to the same DOM element.\r\n      undelegateEvents: function() {\r\n        if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n        return this;\r\n      },\r\n\r\n      // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n      // `selector` and `listener` are both optional.\r\n      undelegate: function(eventName, selector, listener) {\r\n        this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Produces a DOM element to be assigned to your view. Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _createElement: function(tagName,attrs) {\r\n        return noder.createElement(tagName,attrs);\r\n      },\r\n\r\n      // Ensure that the View has a DOM element to render into.\r\n      // If `this.el` is a string, pass it through `$()`, take the first\r\n      // matching element, and re-assign it to `el`. Otherwise, create\r\n      // an element from the `id`, `className` and `tagName` properties.\r\n      _ensureElement: function() {\r\n        if (!this.el) {\r\n          var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n          if (this.id) attrs.id = langx.result(this, 'id');\r\n          if (this.className) attrs['class'] = langx.result(this, 'className');\r\n          this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n          this._setAttributes(attrs);\r\n        } else {\r\n          this.setElement(langx.result(this, 'el'));\r\n        }\r\n      },\r\n\r\n      // Set attributes from a hash on this view's element.  Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _setAttributes: function(attributes) {\r\n        this.$el.attr(attributes);\r\n      },\r\n      \r\n    });\r\n\r\n\r\n  View.partial(events.EventExtends);\r\n\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n  // List of view options to be set as properties.\r\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\r\n\r\n  View.extend = helper.extend;\r\n\r\n  return View;\r\n});\ndefine('skylark-backbone/main',[\r\n\t\"./backbone\",\r\n\t\"./events\",\r\n\t\"./Collection\",\r\n\t\"./Model\",\r\n\t\"./History\",\r\n\t\"./Router\",\r\n\t\"./View\"\r\n],function(backbone){\r\n\treturn backbone;\r\n});\ndefine('skylark-backbone', ['skylark-backbone/main'], function (main) { return main; });\n\n"]}