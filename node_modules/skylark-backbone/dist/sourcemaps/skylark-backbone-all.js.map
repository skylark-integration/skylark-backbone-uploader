{"version":3,"sources":["skylark-backbone-all.js"],"names":["define","class2type","type","split","forEach","name","toLowerCase","obj","String","toString","call","isEmptyObject","isFunction","value","isHtmlNode","Node","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","length","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmpty","isNull","isNumber","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","i","item","j","push","baseIndexOf","compact","first","items","n","slice","inArray","indexOf","makeArray","offset","startWith","concat","map","elements","callback","key","values","uniq","idx","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","toInteger","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","has","path","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","_","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","l","each","undef","extend","arg","isEqual","includes","collection","guard","nativeMax","isMatch","attrs","removeItem","splice","fallback","prop","safeMixin","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","fn","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","arr","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","funcs","PGLISTENERS","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","idCounter","camelCase","toUpperCase","dasherize","deserializeValue","JSON","parse","lowerFirst","charAt","serializeValue","stringify","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","escape","join","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","skylark","datetimes","_uid","langx","createEvent","funcArg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","models","emulateHTTP","emulateJSON","backends","wrapError","model","resp","Entity","sync","fetch","entity","serverAttrs","save","destroy","stopListening","base","urlError","encodeURIComponent","Collection","entities","comparator","_reset","reset","setOptions","merge","addOptions","insert","at","min","max","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","some","m","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","pluck","callbackOpts","_onEntityEvent","prevId","providers","registry","setting","provides","backend","syncMethod","options2","methodMap","read","ajaxSync","_method","textStatus","errorThrown","S4","substring","LocalStorage","store","localStorage","getItem","records","setItem","find","include","jsonData","findAll","chain","errorMessage","syncDfd","code","DOMException","QUOTA_EXCEEDED_ERR","message","localSync","main","dom","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","browser","isIE","exec","navigator","userAgent","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","node","svg","baseVal","elementDisplay","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getComputedStyle","getPropertyValue","removeProperty","cssText","disabled","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","append","placing","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","$1","container","innerHTML","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isDoc","offsetParent","ownerWindow","defaultView","parentWindow","refNode","nextSibling","insertBefore","prepend","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","velm","local","nativeMatchesSelector","parsed","separatorIndex","combinatorIndex","reversed","from","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","_attributeData","_setData","dataAttrName","camelName","_getData","datax","dataName","aria","cleanData","removeAttr","removeAttribute","removeData","removeProp","txt","textContent","multiple","selectedOptions","option","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","ns","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","matcher","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","isQ","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","jquery","grep","isNumeric","parseJSON","serializeArray","field","bind","triggerHandler","undelegate","live","die","unbind","moveto","uuid","expr","filters","createPseudo","step","setOffset","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","_data","propName","parseHTML","uniqueSort","unique","jQuery","parseArguments","ajaxJSONP","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","originalCallback","errorType","head","ajaxSettings","ajax","hasPlaceholder","jsonp","getJSON","originalLoad","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","ajaxPrefilter","ajaxTransport","ajaxSetup","settings","Callbacks","memory","firing","firingStart","firingLength","firingIndex","list","stack","once","fire","stopOnFalse","disable","lock","locked","fireWith","_p","originThen","expando","core_rnotwhite","core_push","Data","owner","descriptor","unlock","defineProperties","access","stored","camel","hasData","discard","data_priv","dequeue","startLength","hooks","_queueHooks","isArraylike","second","setter","clearQueue","Backbone","backbone","EventExtends","BackboneEvented","EventedProto","Events","previousUnderscore","ArrayProto","ObjProto","nativeIsArray","nativeKeys","nativeCreate","Ctor","_wrapped","exports","module","VERSION","builtinIteratee","optimizeCb","argCount","accumulator","iteratee","identity","restArguments","startIndex","rest","baseCreate","shallowProperty","deepGet","MAX_ARRAY_INDEX","pow","getLength","collect","currentKey","createReduce","memo","initial","reducer","reduce","foldl","inject","reduceRight","foldr","detect","keyFinder","findIndex","findKey","negate","any","invoke","contextPath","computed","lastComputed","shuffle","sample","rand","temp","criteria","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","pass","take","Boolean","shallow","strict","output","isArguments","without","otherArrays","difference","isSorted","seen","union","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","floor","createIndexFinder","predicateFind","lastIndexOf","range","ceil","chunk","executeBound","sourceFunc","boundFunc","callingContext","bound","callArgs","boundArgs","placeholder","bindAll","memoize","hasher","address","throttle","later","leading","now","throttled","remaining","trailing","debounced","callNow","compose","times","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","mapObject","pairs","invert","functions","methods","createAssigner","extendOwn","assign","keyInObj","pick","omit","tap","interceptor","isElement","nodelist","Int8Array","isFinite","noConflict","constant","propertyOf","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","render","variable","argument","instance","_chain","chainResult","underscore","_isModel","modelMatcher","protoProps","staticProps","addUnderscoreMethods","Class","defaultVal","addMethod","helper","[object Object]","modelId","Model","History","checkUrl","history","routeStripper","rootStripper","pathStripper","started","atRoot","pathname","getSearch","matchRoot","decodeFragment","rootPath","fragment","decodeURI","getHash","getPath","getFragment","_usePushState","_wantsHashChange","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","navigate","iframe","iWindow","contentWindow","close","attachEvent","_checkUrlInterval","loadUrl","detachEvent","route","title","_updateHash","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","isRegExp","_routeToRegExp","router","_extractParameters","optional","decodeURIComponent","VisualElement","_elm","elmx","batch","action","HTMLElement","_delegator","pluginKlasses","pluginName","pluginInstance","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","curOption","_setOptions","_setOption","domNode","shortcutName","extfn","shortcutter","View","preinitialize","viewOptions","_ensureElement","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","delegateEventSplitter","_createElement","_setAttributes"],"mappings":"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,WACA,IACAmlB,EADA7tB,KACAuhD,KACAp9C,EAAAJ,EAAAhE,MAAA2I,GAAAmlB,GAAAlxB,OAAAN,EAAA/D,KAAAoH,aAEA,GAAAyE,EAAA,CACA,GAAAA,IAAAuE,EACA,OANA1I,KAQAmE,aAAAw9C,YACAx9C,EAAA,IAAAm9C,EAAAn9C,GACAkU,EAAAjf,YAAA+K,KACAA,EAAAvH,EAAAtE,KAAA6L,EAAA,SAAAqiB,GACA,OAAAA,aAAAm7B,YACA,IAAAL,EAAA96B,GAEAA,KAMA,OAAAriB,GA8BAy9C,CAAAl5C,EAAAzQ,GAAAyQ,KAGA44C,EAAA59C,QAAAtB,MAKAo/C,EAAAv8C,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAquB,GAGAkuB,EAAAv8C,UACA,MACA,KACA,MACA,YACA,WACA81B,GAGAymB,EAAAv8C,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA4sB,GAMA2vB,EAAAtjC,KAAA,SAAAhR,GACA,MAAA,SAAAA,EACAlN,KAAAwvB,KAEAxvB,KAAAwvB,KAAAK,WAAA3iB,IAKAs0C,EAAAv8C,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAqhC,GAIAkb,EAAAv8C,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA+6B,GAGAwhB,EAAAv8C,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAohB,GAGAm7B,EAAAv8C,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAyd,IAIA,WAAA,OAAA,MAAA,QAAA,SAAA,QAAA,SAAA,SAAA,aACA,YAAA,cAAA,eAAA,cAAA,UAAA,WAAA,SAAA,aAAA,YAAA,cAAA,eAAA,UAAA,cAAA,aAAA,eAAA,gBAAA,QACA,aAAA,kBAAA,UAAA,WAA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","file":"../skylark-backbone-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,arrays,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,klass,numbers,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-fw-model/models',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        backends : {\r\n            \r\n        }\r\n    });\r\n\r\n\r\n    return models;\r\n});\r\n\ndefine('skylark-fw-model/Entity',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./models\"\r\n],function(langx,models){\r\n   // Wrap an optional error callback with a fallback error event.\r\n  var wrapError = function(model, options) {\r\n    var error = options.error;\r\n    options.error = function(resp) {\r\n      if (error) error.call(options.context, model, resp, options);\r\n      model.trigger('error', model, resp, options);\r\n    };\r\n  };\r\n\r\n \r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  return models.Entity = Entity;\r\n\r\n});\ndefine('skylark-fw-model/Collection',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./models\",\r\n\t\"./Entity\"\r\n],function(langx,models,Entity){\r\n  // Wrap an optional error callback with a fallback error event.\r\n  var wrapError = function(model, options) {\r\n    var error = options.error;\r\n    options.error = function(resp) {\r\n      if (error) error.call(options.context, model, resp, options);\r\n      model.trigger('error', model, resp, options);\r\n    };\r\n  };\r\n\r\n\r\n\tvar Collection  = langx.Evented.inherit({\r\n\t\t\"_construct\" : function(entities, options) {\r\n\t\t\toptions || (options = {});\r\n\t\t\tif (options.entity) this.entity = options.entity;\r\n\t\t\tif (options.comparator !== void 0) this.comparator = options.comparator;\r\n\t\t\tthis._reset();\r\n\t\t\tif (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n\t\t}\r\n\t}); \r\n\r\n\t// Default options for `Collection#set`.\r\n\tvar setOptions = {add: true, remove: true, merge: true};\r\n\tvar addOptions = {add: true, remove: false};\r\n\r\n\t// Splices `insert` into `array` at index `at`.\r\n\tvar splice = function(array, insert, at) {\r\n\t\tat = Math.min(Math.max(at, 0), array.length);\r\n\t\tvar tail = Array(array.length - at);\r\n\t\tvar length = insert.length;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n\t\tfor (i = 0; i < length; i++) array[i + at] = insert[i];\r\n\t\tfor (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n\t};\r\n\r\n  // Define the Collection's inheritable methods.\r\n\tCollection.partial({\r\n\r\n\t\t// The default entity for a collection is just a **Entity**.\r\n\t\t// This should be overridden in most cases.\r\n\t\tentity: Entity,\r\n\r\n\t\t// Initialize is an empty function by default. Override it with your own\r\n\t\t// initialization logic.\r\n\t\tinitialize: function(){},\r\n\r\n\t\t// The JSON representation of a Collection is an array of the\r\n\t\t// entities' attributes.\r\n\t\ttoJSON: function(options) {\r\n\t\t  return this.map(function(entity) { return entity.toJSON(options); });\r\n\t\t},\r\n\r\n\t\t// Proxy `models.sync` by default.\r\n\t\tsync: function() {\r\n\t\t  return models.sync.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t// Add a entity, or list of entities to the set. `entities` may be Backbone\r\n\t\t// Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n\t\t// combination of the two.\r\n\t\tadd: function(entities, options) {\r\n\t\t  return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n\t\t},\r\n\r\n\t\t// Remove a entity, or a list of entities from the set.\r\n\t\tremove: function(entities, options) {\r\n\t\t  options = langx.mixin({}, options);\r\n\t\t  var singular = !langx.isArray(entities);\r\n\t\t  entities = singular ? [entities] : entities.slice();\r\n\t\t  var removed = this._removeEntitys(entities, options);\r\n\t\t  if (!options.silent && removed.length) {\r\n\t\t    options.changes = {added: [], merged: [], removed: removed};\r\n\t\t    this.trigger('update', this, options);\r\n\t\t  }\r\n\t\t  return singular ? removed[0] : removed;\r\n\t\t},\r\n\r\n\t\t// Update a collection by `set`-ing a new list of entities, adding new ones,\r\n\t\t// removing entities that are no longer present, and merging entities that\r\n\t\t// already exist in the collection, as necessary. Similar to **Entity#set**,\r\n\t\t// the core operation for updating the data contained by the collection.\r\n\t\tset: function(entities, options) {\r\n\t\t  if (entities == null) return;\r\n\r\n\t\t  options = langx.mixin({}, setOptions, options);\r\n\t\t  if (options.parse && !this._isEntity(entities)) {\r\n\t\t    entities = this.parse(entities, options) || [];\r\n\t\t  }\r\n\r\n\t\t  var singular = !langx.isArray(entities);\r\n\t\t  entities = singular ? [entities] : entities.slice();\r\n\r\n\t\t  var at = options.at;\r\n\t\t  if (at != null) at = +at;\r\n\t\t  if (at > this.length) at = this.length;\r\n\t\t  if (at < 0) at += this.length + 1;\r\n\r\n\t\t  var set = [];\r\n\t\t  var toAdd = [];\r\n\t\t  var toMerge = [];\r\n\t\t  var toRemove = [];\r\n\t\t  var modelMap = {};\r\n\r\n\t\t  var add = options.add;\r\n\t\t  var merge = options.merge;\r\n\t\t  var remove = options.remove;\r\n\r\n\t\t  var sort = false;\r\n\t\t  var sortable = this.comparator && at == null && options.sort !== false;\r\n\t\t  var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n\t\t  // Turn bare objects into entity references, and prevent invalid entities\r\n\t\t  // from being added.\r\n\t\t  var entity, i;\r\n\t\t  for (i = 0; i < entities.length; i++) {\r\n\t\t    entity = entities[i];\r\n\r\n\t\t    // If a duplicate is found, prevent it from being added and\r\n\t\t    // optionally merge it into the existing entity.\r\n\t\t    var existing = this.get(entity);\r\n\t\t    if (existing) {\r\n\t\t      if (merge && entity !== existing) {\r\n\t\t        var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n\t\t        if (options.parse) attrs = existing.parse(attrs, options);\r\n\t\t        existing.set(attrs, options);\r\n\t\t        toMerge.push(existing);\r\n\t\t        if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n\t\t      }\r\n\t\t      if (!modelMap[existing.cid]) {\r\n\t\t        modelMap[existing.cid] = true;\r\n\t\t        set.push(existing);\r\n\t\t      }\r\n\t\t      entities[i] = existing;\r\n\r\n\t\t    // If this is a new, valid entity, push it to the `toAdd` list.\r\n\t\t    } else if (add) {\r\n\t\t      entity = entities[i] = this._prepareEntity(entity, options);\r\n\t\t      if (entity) {\r\n\t\t        toAdd.push(entity);\r\n\t\t        this._addReference(entity, options);\r\n\t\t        modelMap[entity.cid] = true;\r\n\t\t        set.push(entity);\r\n\t\t      }\r\n\t\t    }\r\n\t\t  }\r\n\r\n\t\t  // Remove stale entities.\r\n\t\t  if (remove) {\r\n\t\t    for (i = 0; i < this.length; i++) {\r\n\t\t      entity = this.entities[i];\r\n\t\t      if (!modelMap[entity.cid]) toRemove.push(entity);\r\n\t\t    }\r\n\t\t    if (toRemove.length) this._removeEntitys(toRemove, options);\r\n\t\t  }\r\n\r\n\t\t  // See if sorting is needed, update `length` and splice in new entities.\r\n\t\t  var orderChanged = false;\r\n\t\t  var replace = !sortable && add && remove;\r\n\t\t  if (set.length && replace) {\r\n\t\t    orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n\t\t      return m !== set[index];\r\n\t\t    });\r\n\t\t    this.entities.length = 0;\r\n\t\t    splice(this.entities, set, 0);\r\n\t\t    this.length = this.entities.length;\r\n\t\t  } else if (toAdd.length) {\r\n\t\t    if (sortable) sort = true;\r\n\t\t    splice(this.entities, toAdd, at == null ? this.length : at);\r\n\t\t    this.length = this.entities.length;\r\n\t\t  }\r\n\r\n\t\t  // Silently sort the collection if appropriate.\r\n\t\t  if (sort) this.sort({silent: true});\r\n\r\n\t\t  // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n\t\t  if (!options.silent) {\r\n\t\t    for (i = 0; i < toAdd.length; i++) {\r\n\t\t      if (at != null) options.index = at + i;\r\n\t\t      entity = toAdd[i];\r\n\t\t      entity.trigger('add', entity, this, options);\r\n\t\t    }\r\n\t\t    if (sort || orderChanged) this.trigger('sort', this, options);\r\n\t\t    if (toAdd.length || toRemove.length || toMerge.length) {\r\n\t\t      options.changes = {\r\n\t\t        added: toAdd,\r\n\t\t        removed: toRemove,\r\n\t\t        merged: toMerge\r\n\t\t      };\r\n\t\t      this.trigger('update', this, options);\r\n\t\t    }\r\n\t\t  }\r\n\r\n\t\t  // Return the added (or merged) entity (or entities).\r\n\t\t  return singular ? entities[0] : entities;\r\n\t\t},\r\n\r\n\t\t// When you have more items than you want to add or remove individually,\r\n\t\t// you can reset the entire set with a new list of entities, without firing\r\n\t\t// any granular `add` or `remove` events. Fires `reset` when finished.\r\n\t\t// Useful for bulk operations and optimizations.\r\n\t\treset: function(entities, options) {\r\n\t\t  options = options ? langx.clone(options) : {};\r\n\t\t  for (var i = 0; i < this.entities.length; i++) {\r\n\t\t    this._removeReference(this.entities[i], options);\r\n\t\t  }\r\n\t\t  options.previousEntitys = this.entities;\r\n\t\t  this._reset();\r\n\t\t  entities = this.add(entities, langx.mixin({silent: true}, options));\r\n\t\t  if (!options.silent) this.trigger('reset', this, options);\r\n\t\t  return entities;\r\n\t\t},\r\n\r\n\t\t// Add a entity to the end of the collection.\r\n\t\tpush: function(entity, options) {\r\n\t\t  return this.add(entity, langx.mixin({at: this.length}, options));\r\n\t\t},\r\n\r\n\t\t// Remove a entity from the end of the collection.\r\n\t\tpop: function(options) {\r\n\t\t  var entity = this.at(this.length - 1);\r\n\t\t  return this.remove(entity, options);\r\n\t\t},\r\n\r\n\t\t// Add a entity to the beginning of the collection.\r\n\t\tunshift: function(entity, options) {\r\n\t\t  return this.add(entity, langx.mixin({at: 0}, options));\r\n\t\t},\r\n\r\n\t\t// Remove a entity from the beginning of the collection.\r\n\t\tshift: function(options) {\r\n\t\t  var entity = this.at(0);\r\n\t\t  return this.remove(entity, options);\r\n\t\t},\r\n\r\n\t\t// Slice out a sub-array of entities from the collection.\r\n\t\tslice: function() {\r\n\t\t  return slice.apply(this.entities, arguments);\r\n\t\t},\r\n\r\n\t\t// Get a entity from the set by id, cid, entity object with id or cid\r\n\t\t// properties, or an attributes object that is transformed through entityId.\r\n\t\tget: function(obj) {\r\n\t\t  if (obj == null) return void 0;\r\n\t\t  return this._byId[obj] ||\r\n\t\t    this._byId[this.entityId(obj.attributes || obj)] ||\r\n\t\t    obj.cid && this._byId[obj.cid];\r\n\t\t},\r\n\r\n\t\t// Returns `true` if the entity is in the collection.\r\n\t\thas: function(obj) {\r\n\t\t  return this.get(obj) != null;\r\n\t\t},\r\n\r\n\t\t// Get the entity at the given index.\r\n\t\tat: function(index) {\r\n\t\t  if (index < 0) index += this.length;\r\n\t\t  return this.entities[index];\r\n\t\t},\r\n\r\n\t\t// Return entities with matching attributes. Useful for simple cases of\r\n\t\t// `filter`.\r\n\t\twhere: function(attrs, first) {\r\n\t\t  return this[first ? 'find' : 'filter'](attrs);\r\n\t\t},\r\n\r\n\t\t// Return the first entity with matching attributes. Useful for simple cases\r\n\t\t// of `find`.\r\n\t\tfindWhere: function(attrs) {\r\n\t\t  return this.where(attrs, true);\r\n\t\t},\r\n\r\n\t\t// Force the collection to re-sort itself. You don't need to call this under\r\n\t\t// normal circumstances, as the set will maintain sort order as each item\r\n\t\t// is added.\r\n\t\tsort: function(options) {\r\n\t\t  var comparator = this.comparator;\r\n\t\t  if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n\t\t  options || (options = {});\r\n\r\n\t\t  var length = comparator.length;\r\n\t\t  if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n\t\t  // Run sort based on type of `comparator`.\r\n\t\t  if (length === 1 || langx.isString(comparator)) {\r\n\t\t    this.entities = this.sortBy(comparator);\r\n\t\t  } else {\r\n\t\t    this.entities.sort(comparator);\r\n\t\t  }\r\n\t\t  if (!options.silent) this.trigger('sort', this, options);\r\n\t\t  return this;\r\n\t\t},\r\n\r\n\t\t// Pluck an attribute from each entity in the collection.\r\n\t\tpluck: function(attr) {\r\n\t\t  return this.map(attr + '');\r\n\t\t},\r\n\r\n\t\t// Fetch the default set of entities for this collection, resetting the\r\n\t\t// collection when they arrive. If `reset: true` is passed, the response\r\n\t\t// data will be passed through the `reset` method instead of `set`.\r\n\t\tfetch: function(options) {\r\n\t\t  options = langx.mixin({parse: true}, options);\r\n\t\t  var success = options.success;\r\n\t\t  var collection = this;\r\n\t\t  options.success = function(resp) {\r\n\t\t    var method = options.reset ? 'reset' : 'set';\r\n\t\t    collection[method](resp, options);\r\n\t\t    if (success) success.call(options.context, collection, resp, options);\r\n\t\t    collection.trigger('sync', collection, resp, options);\r\n\t\t  };\r\n\t\t  wrapError(this, options);\r\n\t\t  return this.sync('read', this, options);\r\n\t\t},\r\n\r\n\t\t// Create a new instance of a entity in this collection. Add the entity to the\r\n\t\t// collection immediately, unless `wait: true` is passed, in which case we\r\n\t\t// wait for the server to agree.\r\n\t\tcreate: function(entity, options) {\r\n\t\t  options = options ? langx.clone(options) : {};\r\n\t\t  var wait = options.wait;\r\n\t\t  entity = this._prepareEntity(entity, options);\r\n\t\t  if (!entity) return false;\r\n\t\t  if (!wait) this.add(entity, options);\r\n\t\t  var collection = this;\r\n\t\t  var success = options.success;\r\n\t\t  options.success = function(m, resp, callbackOpts) {\r\n\t\t    if (wait) collection.add(m, callbackOpts);\r\n\t\t    if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n\t\t  };\r\n\t\t  entity.save(null, options);\r\n\t\t  return entity;\r\n\t\t},\r\n\r\n\t\t// **parse** converts a response into a list of entities to be added to the\r\n\t\t// collection. The default implementation is just to pass it through.\r\n\t\tparse: function(resp, options) {\r\n\t\t  return resp;\r\n\t\t},\r\n\r\n\t\t// Create a new collection with an identical list of entities as this one.\r\n\t\tclone: function() {\r\n\t\t  return new this.constructor(this.entities, {\r\n\t\t    entity: this.entity,\r\n\t\t    comparator: this.comparator\r\n\t\t  });\r\n\t\t},\r\n\r\n\t\t// Define how to uniquely identify entities in the collection.\r\n\t\tentityId: function(attrs) {\r\n\t\t  return attrs[this.entity.prototype.idAttribute || 'id'];\r\n\t\t},\r\n\r\n\t\t// Private method to reset all internal state. Called when the collection\r\n\t\t// is first initialized or reset.\r\n\t\t_reset: function() {\r\n\t\t  this.length = 0;\r\n\t\t  this.entities = [];\r\n\t\t  this._byId  = {};\r\n\t\t},\r\n\r\n\t\t// Prepare a hash of attributes (or other entity) to be added to this\r\n\t\t// collection.\r\n\t\t_prepareEntity: function(attrs, options) {\r\n\t\t  if (this._isEntity(attrs)) {\r\n\t\t    if (!attrs.collection) attrs.collection = this;\r\n\t\t    return attrs;\r\n\t\t  }\r\n\t\t  options = options ? langx.clone(options) : {};\r\n\t\t  options.collection = this;\r\n\t\t  var entity = new this.entity(attrs, options);\r\n\t\t  if (!entity.validationError) return entity;\r\n\t\t  this.trigger('invalid', this, entity.validationError, options);\r\n\t\t  return false;\r\n\t\t},\r\n\r\n\t\t// Internal method called by both remove and set.\r\n\t\t_removeEntitys: function(entities, options) {\r\n\t\t  var removed = [];\r\n\t\t  for (var i = 0; i < entities.length; i++) {\r\n\t\t    var entity = this.get(entities[i]);\r\n\t\t    if (!entity) continue;\r\n\r\n\t\t    var index = this.indexOf(entity);\r\n\t\t    this.entities.splice(index, 1);\r\n\t\t    this.length--;\r\n\r\n\t\t    // Remove references before triggering 'remove' event to prevent an\r\n\t\t    // infinite loop. #3693\r\n\t\t    delete this._byId[entity.cid];\r\n\t\t    var id = this.entityId(entity.attributes);\r\n\t\t    if (id != null) delete this._byId[id];\r\n\r\n\t\t    if (!options.silent) {\r\n\t\t      options.index = index;\r\n\t\t      entity.trigger('remove', entity, this, options);\r\n\t\t    }\r\n\r\n\t\t    removed.push(entity);\r\n\t\t    this._removeReference(entity, options);\r\n\t\t  }\r\n\t\t  return removed;\r\n\t\t},\r\n\r\n\t\t// Method for checking whether an object should be considered a entity for\r\n\t\t// the purposes of adding to the collection.\r\n\t\t_isEntity: function(entity) {\r\n\t\t  return entity instanceof Entity;\r\n\t\t},\r\n\r\n\t\t// Internal method to create a entity's ties to a collection.\r\n\t\t_addReference: function(entity, options) {\r\n\t\t  this._byId[entity.cid] = entity;\r\n\t\t  var id = this.entityId(entity.attributes);\r\n\t\t  if (id != null) this._byId[id] = entity;\r\n\t\t  entity.on('all', this._onEntityEvent, this);\r\n\t\t},\r\n\r\n\t\t// Internal method to sever a entity's ties to a collection.\r\n\t\t_removeReference: function(entity, options) {\r\n\t\t  delete this._byId[entity.cid];\r\n\t\t  var id = this.entityId(entity.attributes);\r\n\t\t  if (id != null) delete this._byId[id];\r\n\t\t  if (this === entity.collection) delete entity.collection;\r\n\t\t  entity.off('all', this._onEntityEvent, this);\r\n\t\t},\r\n\r\n\t\t// Internal method called every time a entity in the set fires an event.\r\n\t\t// Sets need to update their indexes when entities change ids. All other\r\n\t\t// events simply proxy through. \"add\" and \"remove\" events that originate\r\n\t\t// in other collections are ignored.\r\n\t\t_onEntityEvent: function(event, entity, collection, options) {\r\n\t\t  if (entity) {\r\n\t\t    if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n\t\t    if (event === 'destroy') this.remove(entity, options);\r\n\t\t    if (event === 'change') {\r\n\t\t      var prevId = this.entityId(entity.previousAttributes());\r\n\t\t      var id = this.entityId(entity.attributes);\r\n\t\t      if (prevId !== id) {\r\n\t\t        if (prevId != null) delete this._byId[prevId];\r\n\t\t        if (id != null) this._byId[id] = entity;\r\n\t\t      }\r\n\t\t    }\r\n\t\t  }\r\n\t\t  this.trigger.apply(this, arguments);\r\n\t\t}\r\n\r\n  \t});\r\n\r\n\treturn models.Collection = Collection;\r\n});\ndefine('skylark-fw-model/backends/registry',[\r\n\t\"skylark-langx/langx\",\r\n\t\"../models\"\r\n],function(langx,models){\r\n\tvar providers = {};\r\n\r\n\tfunction add(name,setting) {\r\n\t\tproviders[name] = setting;\r\n\t}\r\n\r\n\tfunction remove(name) {\r\n\t\tdelete provides[name];\r\n\t}\r\n\r\n\tfunction get(name) {\r\n\t\treturn providers[name];\r\n\t}\r\n\r\n\treturn models.backends.registry = {\r\n\t\tadd : add,\r\n\t\tremove: remove,\r\n\t\tget : get\r\n\t};\r\n});\ndefine('skylark-fw-model/sync',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./models\",\r\n  \t\"./backends/registry\"\r\n],function(langx,models,registry){\r\n\r\n\t// Override 'Backbone.sync' to default to localSync,\r\n\t// the original 'Backbone.sync' is still available in 'Backbone.ajaxSync'\r\n\tfunction sync(method, model, options) {\r\n\t\tif (!options.backend) {\r\n\t\t\tthrow new Error(\"The backend is not specified\")\r\n\t\t}\r\n\t\tvar setting = registry.get(options.backend);\r\n\t\tif (!setting) {\r\n\t\t\tthrow new Error(\"The backend is not defined:\" + options.backend);\r\n\t\t}\r\n\t\tvar syncMethod = setting.sync;\r\n\t\tif (!syncMethod) {\r\n\t\t\tthrow new Error(\"The backend sync method is not defined:\" + options.backend);\r\n\t\t}\r\n\r\n\t\tvar options2 = langx.mixin({},setting.options,options);\r\n\t  \treturn syncMethod.apply(this, [method, model, options2]);\r\n\t};\r\n\r\n  \r\n   return models.sync = sync;\r\n\r\n});\ndefine('skylark-fw-model/backends/ajaxSync',[\r\n\t\"skylark-langx/langx\",\r\n\t\"../models\"\r\n],function(langx,models){\r\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n \r\n  \r\n  return models.backends.ajaxSync = sync;\r\n\r\n});\ndefine('skylark-fw-model/backends/localSync',[\r\n  \"skylark-langx/langx\",\r\n  \"../models\"\r\n],function(langx,models){\r\n\r\n  // A simple module to replace `Backbone.sync` with *localStorage*-based\r\n  // persistence. Models are given GUIDS, and saved into a JSON object. Simple\r\n  // as that.\r\n\r\n  // Hold reference to Underscore.js and Backbone.js in the closure in order\r\n  // to make things work even if they are removed from the global namespace\r\n\r\n  // Generate four random hex digits.\r\n  function S4() {\r\n     return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n  };\r\n\r\n  // Generate a pseudo-GUID by concatenating random hexadecimal.\r\n  function guid() {\r\n     return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n  };\r\n\r\n  // Our Store is represented by a single JS object in *localStorage*. Create it\r\n  // with a meaningful name, like the name you'd give a table.\r\n  // window.Store is deprecated, use Backbone.LocalStorage instead\r\n  var LocalStorage = langx.klass({\r\n    _construct : function(name) {\r\n      this.name = name;\r\n      var store = this.localStorage().getItem(this.name);\r\n      this.records = (store && store.split(\",\")) || [];\r\n    },\r\n\r\n    // Save the current state of the **Store** to *localStorage*.\r\n    save: function() {\r\n      this.localStorage().setItem(this.name, this.records.join(\",\"));\r\n    },\r\n\r\n    // Add a model, giving it a (hopefully)-unique GUID, if it doesn't already\r\n    // have an id of it's own.\r\n    create: function(model) {\r\n      if (!model.id) {\r\n        model.id = guid();\r\n        model.set(model.idAttribute, model.id);\r\n      }\r\n      this.localStorage().setItem(this.name+\"-\"+model.id, JSON.stringify(model));\r\n      this.records.push(model.id.toString());\r\n      this.save();\r\n      return this.find(model);\r\n    },\r\n\r\n    // Update a model by replacing its copy in `this.data`.\r\n    update: function(model) {\r\n      this.localStorage().setItem(this.name+\"-\"+model.id, JSON.stringify(model));\r\n      if (!_.include(this.records, model.id.toString()))\r\n        this.records.push(model.id.toString()); this.save();\r\n      return this.find(model);\r\n    },\r\n\r\n    // Retrieve a model from `this.data` by id.\r\n    find: function(model) {\r\n      return this.jsonData(this.localStorage().getItem(this.name+\"-\"+model.id));\r\n    },\r\n\r\n    // Return the array of all models currently in storage.\r\n    findAll: function() {\r\n      return _(this.records).chain()\r\n        .map(function(id){\r\n          return this.jsonData(this.localStorage().getItem(this.name+\"-\"+id));\r\n        }, this)\r\n        .compact()\r\n        .value();\r\n    },\r\n\r\n    // Delete a model from `this.data`, returning it.\r\n    destroy: function(model) {\r\n      if (model.isNew())\r\n        return false\r\n      this.localStorage().removeItem(this.name+\"-\"+model.id);\r\n      this.records = _.reject(this.records, function(id){\r\n        return id === model.id.toString();\r\n      });\r\n      this.save();\r\n      return model;\r\n    },\r\n\r\n    localStorage: function() {\r\n      return localStorage;\r\n    },\r\n\r\n    // fix for \"illegal access\" error on Android when JSON.parse is passed null\r\n    jsonData: function (data) {\r\n        return data && JSON.parse(data);\r\n    }\r\n\r\n  });\r\n\r\n  // localSync delegate to the model or collection's\r\n  // *localStorage* property, which should be an instance of `Store`.\r\n  function sync(method, model, options) {\r\n    var store = model.localStorage || model.collection.localStorage;\r\n\r\n    var resp, errorMessage, syncDfd = langx.Deferred(); //If $ is having Deferred - use it.\r\n\r\n    try {\r\n\r\n      switch (method) {\r\n        case \"read\":\r\n          resp = model.id != undefined ? store.find(model) : store.findAll();\r\n          break;\r\n        case \"create\":\r\n          resp = store.create(model);\r\n          break;\r\n        case \"update\":\r\n          resp = store.update(model);\r\n          break;\r\n        case \"delete\":\r\n          resp = store.destroy(model);\r\n          break;\r\n      }\r\n\r\n    } catch(error) {\r\n      if (error.code === DOMException.QUOTA_EXCEEDED_ERR && window.localStorage.length === 0)\r\n        errorMessage = \"Private browsing is unsupported\";\r\n      else\r\n        errorMessage = error.message;\r\n    }\r\n\r\n    if (resp) {\r\n      model.trigger(\"sync\", model, resp, options);\r\n      if (options && options.success)\r\n        options.success(resp);\r\n      if (syncDfd)\r\n        syncDfd.resolve(resp);\r\n\r\n    } else {\r\n      errorMessage = errorMessage ? errorMessage\r\n                                  : \"Record Not Found\";\r\n\r\n      if (options && options.error)\r\n        options.error(errorMessage);\r\n      if (syncDfd)\r\n        syncDfd.reject(errorMessage);\r\n    }\r\n\r\n    // add compatibility with $.ajax\r\n    // always execute callback for success and error\r\n    if (options && options.complete) options.complete(resp);\r\n\r\n    return syncDfd && syncDfd.promise();\r\n  };\r\n\r\n  models.backends.LocalStorage = sync.LocalStorage = LocalStorage;\r\n  \r\n  return models.backends.localSync = sync;\r\n\r\n});\ndefine('skylark-fw-model/main',[\r\n\t\"./models\",\r\n\t\"./Collection\",\r\n\t\"./Entity\",\r\n\t\"./sync\",\r\n\t\"./backends/ajaxSync\",\r\n\t\"./backends/localSync\",\r\n\t\"./backends/registry\"\r\n],function(models){\r\n\treturn models;\r\n});\ndefine('skylark-fw-model', ['skylark-fw-model/main'], function (main) { return main; });\n\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = {};\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,'transitionEnd') \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-jquery/core',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/browser\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"skylark-utils-dom/datax\",\r\n\t\"skylark-utils-dom/eventer\",\r\n\t\"skylark-utils-dom/finder\",\r\n\t\"skylark-utils-dom/fx\",\r\n\t\"skylark-utils-dom/styler\",\r\n\t\"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = langx.extend;\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n        $.isNumeric = langx.isNumber;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if (!options) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (langx.isString(options)) {\r\n            options = {\r\n                url :  options\r\n            };\r\n        }\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        if (options.success) {\r\n            p = p.then(options.success,options.error);\r\n        }\r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            _p = d.promise;\r\n        d.promise = function() {\r\n            return _p;\r\n        }\r\n        return d;\r\n    };\r\n\r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                results = results.map(function(result){\r\n                    return [result];\r\n                });\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\ndefine('skylark-backbone/backbone',[\r\n\t\"skylark-langx/skylark\",\r\n    \"skylark-fw-model\",\r\n\t\"skylark-jquery\"\r\n],function(skylark, models,$){\r\n//     from Backbone.js 1.2.3\r\n\r\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Backbone may be freely distributed under the MIT license.\r\n//     For all details and documentation:\r\n//     http://backbonejs.org\r\n\tvar Backbone = skylark.backbone = {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n\t}\r\n    \r\n    Backbone.$ = $;\r\n\r\n    Backbone.sync =    function(method, entity, options) {\r\n\t    // Default options, unless specified.\r\n\t    langx.defaults(options || (options = {}), {\r\n\t      emulateHTTP: Backbone.emulateHTTP,\r\n\t      emulateJSON: Backbone.emulateJSON\r\n\t    });\r\n\t    return models.backends.ajaxSync.apply(this,[method,entity,options]);\r\n\t};\r\n\r\n\r\n\treturn Backbone ;\r\n});\ndefine('skylark-backbone/events',[\r\n  \"skylark-langx/langx\",\r\n  \"./backbone\"\r\n],function(langx,Backbone){\r\n  // Create a local reference to a common array method we'll want to use later.\r\n  var slice = Array.prototype.slice;\r\n\r\n  // Backbone.Events\r\n\r\n  var EventExtends = {\r\n      on  : function(name, callback, context){\r\n          var fn =  function() {\r\n            var args = slice.call(arguments,1);\r\n            if (name==\"all\") {\r\n              args.unshift(arguments[0].type);\r\n            }\r\n            callback.apply(this, args);\r\n          };\r\n          fn._ = callback\r\n          \r\n          return this.overrided(name,fn,context);\r\n      },\r\n        \r\n      once : function(name, callback, context) {\r\n        return this.one(name,callback,context);\r\n      },\r\n      bind : function(name, callback, context) {\r\n          return this.on(name,callback,context);\r\n      },\r\n      \r\n      unbind : function(name, callback, context){\r\n          return this.off(name,callback,context);\r\n      },\r\n    \r\n      stopListening : function(obj, name, callback){\r\n        return this.unlistenTo(obj,name,callback);\r\n      }\r\n   },\r\n\r\n  BackboneEvented = langx.Evented.inherit(EventExtends),\r\n\r\n  EventedProto = BackboneEvented.prototype;\r\n  \r\n  var Events = Backbone.Events = {\r\n     bind: EventedProto.bind,\r\n     listenTo: EventedProto.listenTo,\r\n     listenToOnce: EventedProto.listenToOnce,\r\n     off: EventedProto.off,\r\n     on : EventedProto.on,\r\n     once: EventedProto.once,\r\n     stopListening: EventedProto.stopListening,\r\n     trigger: EventedProto.trigger,\r\n     unbind: EventedProto.unbind,\r\n     unlistenTo: EventedProto.unlistenTo\r\n  };\r\n\r\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\r\n  // want global \"pubsub\" in a convenient place.\r\n  langx.extend(Backbone, Events);\r\n\r\n  return {\r\n    EventExtends : EventExtends,\r\n    BackboneEvented : BackboneEvented\r\n  };\r\n\r\n});\ndefine('skylark-underscore/underscore',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n//     Underscore.js 1.9.1\r\n//     http://underscorejs.org\r\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Underscore may be freely distributed under the MIT license.\r\n\r\n  // Baseline setup\r\n  // --------------\r\n\r\n  // Establish the root object, `window` (`self`) in the browser, `global`\r\n  // on the server, or `this` in some virtual machines. We use `self`\r\n  // instead of `window` for `WebWorker` support.\r\n  var root = typeof self == 'object' && self.self === self && self ||\r\n            typeof global == 'object' && global.global === global && global ||\r\n            this ||\r\n            {};\r\n\r\n  // Save the previous value of the `_` variable.\r\n  var previousUnderscore = root._;\r\n\r\n  // Save bytes in the minified (but not gzipped) version:\r\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\r\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n  // Create quick reference variables for speed access to core prototypes.\r\n  var push = ArrayProto.push,\r\n      slice = ArrayProto.slice,\r\n      toString = ObjProto.toString,\r\n      hasOwnProperty = ObjProto.hasOwnProperty;\r\n\r\n  // All **ECMAScript 5** native function implementations that we hope to use\r\n  // are declared here.\r\n  var nativeIsArray = Array.isArray,\r\n      nativeKeys = Object.keys,\r\n      nativeCreate = Object.create;\r\n\r\n  // Naked function reference for surrogate-prototype-swapping.\r\n  var Ctor = function(){};\r\n\r\n  // Create a safe reference to the Underscore object for use below.\r\n  var _ = function(obj) {\r\n    if (obj instanceof _) return obj;\r\n    if (!(this instanceof _)) return new _(obj);\r\n    this._wrapped = obj;\r\n  };\r\n\r\n  // Export the Underscore object for **Node.js**, with\r\n  // backwards-compatibility for their old module API. If we're in\r\n  // the browser, add `_` as a global object.\r\n  // (`nodeType` is checked to ensure that `module`\r\n  // and `exports` are not HTML elements.)\r\n  if (typeof exports != 'undefined' && !exports.nodeType) {\r\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\r\n      exports = module.exports = _;\r\n    }\r\n    exports._ = _;\r\n  } else {\r\n    root._ = _;\r\n  }\r\n\r\n  // Current version.\r\n  _.VERSION = '1.9.1';\r\n\r\n  // Internal function that returns an efficient (for current engines) version\r\n  // of the passed-in callback, to be repeatedly applied in other Underscore\r\n  // functions.\r\n  var optimizeCb = function(func, context, argCount) {\r\n    if (context === void 0) return func;\r\n    switch (argCount == null ? 3 : argCount) {\r\n      case 1: return function(value) {\r\n        return func.call(context, value);\r\n      };\r\n      // The 2-argument case is omitted because we’re not using it.\r\n      case 3: return function(value, index, collection) {\r\n        return func.call(context, value, index, collection);\r\n      };\r\n      case 4: return function(accumulator, value, index, collection) {\r\n        return func.call(context, accumulator, value, index, collection);\r\n      };\r\n    }\r\n    return function() {\r\n      return func.apply(context, arguments);\r\n    };\r\n  };\r\n\r\n  var builtinIteratee;\r\n\r\n  // An internal function to generate callbacks that can be applied to each\r\n  // element in a collection, returning the desired result — either `identity`,\r\n  // an arbitrary callback, a property matcher, or a property accessor.\r\n  var cb = function(value, context, argCount) {\r\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\r\n    if (value == null) return _.identity;\r\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\r\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\r\n    return _.property(value);\r\n  };\r\n\r\n  // External wrapper for our callback generator. Users may customize\r\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\r\n  // This abstraction hides the internal-only argCount argument.\r\n  _.iteratee = builtinIteratee = function(value, context) {\r\n    return cb(value, context, Infinity);\r\n  };\r\n\r\n  // Some functions take a variable number of arguments, or a few expected\r\n  // arguments at the beginning and then a variable number of values to operate\r\n  // on. This helper accumulates all remaining arguments past the function’s\r\n  // argument length (or an explicit `startIndex`), into an array that becomes\r\n  // the last argument. Similar to ES6’s \"rest parameter\".\r\n  var restArguments = function(func, startIndex) {\r\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\r\n    return function() {\r\n      var length = Math.max(arguments.length - startIndex, 0),\r\n          rest = Array(length),\r\n          index = 0;\r\n      for (; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    };\r\n  };\r\n\r\n  // An internal function for creating a new object that inherits from another.\r\n  var baseCreate = function(prototype) {\r\n    if (!_.isObject(prototype)) return {};\r\n    if (nativeCreate) return nativeCreate(prototype);\r\n    Ctor.prototype = prototype;\r\n    var result = new Ctor;\r\n    Ctor.prototype = null;\r\n    return result;\r\n  };\r\n\r\n  var shallowProperty = function(key) {\r\n    return function(obj) {\r\n      return obj == null ? void 0 : obj[key];\r\n    };\r\n  };\r\n\r\n  var has = function(obj, path) {\r\n    return obj != null && hasOwnProperty.call(obj, path);\r\n  }\r\n\r\n  var deepGet = function(obj, path) {\r\n    var length = path.length;\r\n    for (var i = 0; i < length; i++) {\r\n      if (obj == null) return void 0;\r\n      obj = obj[path[i]];\r\n    }\r\n    return length ? obj : void 0;\r\n  };\r\n\r\n  // Helper for collection methods to determine whether a collection\r\n  // should be iterated as an array or as an object.\r\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\r\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\r\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\n  var getLength = shallowProperty('length');\r\n  var isArrayLike = function(collection) {\r\n    var length = getLength(collection);\r\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\r\n  };\r\n\r\n  // Collection Functions\r\n  // --------------------\r\n\r\n  // The cornerstone, an `each` implementation, aka `forEach`.\r\n  // Handles raw objects in addition to array-likes. Treats all\r\n  // sparse array-likes as if they were dense.\r\n  _.each = _.forEach = function(obj, iteratee, context) {\r\n    iteratee = optimizeCb(iteratee, context);\r\n    var i, length;\r\n    if (isArrayLike(obj)) {\r\n      for (i = 0, length = obj.length; i < length; i++) {\r\n        iteratee(obj[i], i, obj);\r\n      }\r\n    } else {\r\n      var keys = _.keys(obj);\r\n      for (i = 0, length = keys.length; i < length; i++) {\r\n        iteratee(obj[keys[i]], keys[i], obj);\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  // Return the results of applying the iteratee to each element.\r\n  _.map = _.collect = function(obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length,\r\n        results = Array(length);\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  // Create a reducing function iterating left or right.\r\n  var createReduce = function(dir) {\r\n    // Wrap code that reassigns argument variables in a separate function than\r\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\r\n    var reducer = function(obj, iteratee, memo, initial) {\r\n      var keys = !isArrayLike(obj) && _.keys(obj),\r\n          length = (keys || obj).length,\r\n          index = dir > 0 ? 0 : length - 1;\r\n      if (!initial) {\r\n        memo = obj[keys ? keys[index] : index];\r\n        index += dir;\r\n      }\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        var currentKey = keys ? keys[index] : index;\r\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\r\n      }\r\n      return memo;\r\n    };\r\n\r\n    return function(obj, iteratee, memo, context) {\r\n      var initial = arguments.length >= 3;\r\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\r\n    };\r\n  };\r\n\r\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\r\n  // or `foldl`.\r\n  _.reduce = _.foldl = _.inject = createReduce(1);\r\n\r\n  // The right-associative version of reduce, also known as `foldr`.\r\n  _.reduceRight = _.foldr = createReduce(-1);\r\n\r\n  // Return the first value which passes a truth test. Aliased as `detect`.\r\n  _.find = _.detect = function(obj, predicate, context) {\r\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\r\n    var key = keyFinder(obj, predicate, context);\r\n    if (key !== void 0 && key !== -1) return obj[key];\r\n  };\r\n\r\n  // Return all the elements that pass a truth test.\r\n  // Aliased as `select`.\r\n  _.filter = _.select = function(obj, predicate, context) {\r\n    var results = [];\r\n    predicate = cb(predicate, context);\r\n    _.each(obj, function(value, index, list) {\r\n      if (predicate(value, index, list)) results.push(value);\r\n    });\r\n    return results;\r\n  };\r\n\r\n  // Return all the elements for which a truth test fails.\r\n  _.reject = function(obj, predicate, context) {\r\n    return _.filter(obj, _.negate(cb(predicate)), context);\r\n  };\r\n\r\n  // Determine whether all of the elements match a truth test.\r\n  // Aliased as `all`.\r\n  _.every = _.all = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length;\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Determine if at least one element in the object matches a truth test.\r\n  // Aliased as `any`.\r\n  _.some = _.any = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length;\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Determine if the array or object contains a given item (using `===`).\r\n  // Aliased as `includes` and `include`.\r\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\r\n    if (!isArrayLike(obj)) obj = _.values(obj);\r\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\r\n    return _.indexOf(obj, item, fromIndex) >= 0;\r\n  };\r\n\r\n  // Invoke a method (with arguments) on every item in a collection.\r\n  _.invoke = restArguments(function(obj, path, args) {\r\n    var contextPath, func;\r\n    if (_.isFunction(path)) {\r\n      func = path;\r\n    } else if (_.isArray(path)) {\r\n      contextPath = path.slice(0, -1);\r\n      path = path[path.length - 1];\r\n    }\r\n    return _.map(obj, function(context) {\r\n      var method = func;\r\n      if (!method) {\r\n        if (contextPath && contextPath.length) {\r\n          context = deepGet(context, contextPath);\r\n        }\r\n        if (context == null) return void 0;\r\n        method = context[path];\r\n      }\r\n      return method == null ? method : method.apply(context, args);\r\n    });\r\n  });\r\n\r\n  // Convenience version of a common use case of `map`: fetching a property.\r\n  _.pluck = function(obj, key) {\r\n    return _.map(obj, _.property(key));\r\n  };\r\n\r\n  // Convenience version of a common use case of `filter`: selecting only objects\r\n  // containing specific `key:value` pairs.\r\n  _.where = function(obj, attrs) {\r\n    return _.filter(obj, _.matcher(attrs));\r\n  };\r\n\r\n  // Convenience version of a common use case of `find`: getting the first object\r\n  // containing specific `key:value` pairs.\r\n  _.findWhere = function(obj, attrs) {\r\n    return _.find(obj, _.matcher(attrs));\r\n  };\r\n\r\n  // Return the maximum element (or element-based computation).\r\n  _.max = function(obj, iteratee, context) {\r\n    var result = -Infinity, lastComputed = -Infinity,\r\n        value, computed;\r\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\r\n      obj = isArrayLike(obj) ? obj : _.values(obj);\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        value = obj[i];\r\n        if (value != null && value > result) {\r\n          result = value;\r\n        }\r\n      }\r\n    } else {\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(v, index, list) {\r\n        computed = iteratee(v, index, list);\r\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\r\n          result = v;\r\n          lastComputed = computed;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Return the minimum element (or element-based computation).\r\n  _.min = function(obj, iteratee, context) {\r\n    var result = Infinity, lastComputed = Infinity,\r\n        value, computed;\r\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\r\n      obj = isArrayLike(obj) ? obj : _.values(obj);\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        value = obj[i];\r\n        if (value != null && value < result) {\r\n          result = value;\r\n        }\r\n      }\r\n    } else {\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(v, index, list) {\r\n        computed = iteratee(v, index, list);\r\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\r\n          result = v;\r\n          lastComputed = computed;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Shuffle a collection.\r\n  _.shuffle = function(obj) {\r\n    return _.sample(obj, Infinity);\r\n  };\r\n\r\n  // Sample **n** random values from a collection using the modern version of the\r\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\r\n  // If **n** is not specified, returns a single random element.\r\n  // The internal `guard` argument allows it to work with `map`.\r\n  _.sample = function(obj, n, guard) {\r\n    if (n == null || guard) {\r\n      if (!isArrayLike(obj)) obj = _.values(obj);\r\n      return obj[_.random(obj.length - 1)];\r\n    }\r\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\r\n    var length = getLength(sample);\r\n    n = Math.max(Math.min(n, length), 0);\r\n    var last = length - 1;\r\n    for (var index = 0; index < n; index++) {\r\n      var rand = _.random(index, last);\r\n      var temp = sample[index];\r\n      sample[index] = sample[rand];\r\n      sample[rand] = temp;\r\n    }\r\n    return sample.slice(0, n);\r\n  };\r\n\r\n  // Sort the object's values by a criterion produced by an iteratee.\r\n  _.sortBy = function(obj, iteratee, context) {\r\n    var index = 0;\r\n    iteratee = cb(iteratee, context);\r\n    return _.pluck(_.map(obj, function(value, key, list) {\r\n      return {\r\n        value: value,\r\n        index: index++,\r\n        criteria: iteratee(value, key, list)\r\n      };\r\n    }).sort(function(left, right) {\r\n      var a = left.criteria;\r\n      var b = right.criteria;\r\n      if (a !== b) {\r\n        if (a > b || a === void 0) return 1;\r\n        if (a < b || b === void 0) return -1;\r\n      }\r\n      return left.index - right.index;\r\n    }), 'value');\r\n  };\r\n\r\n  // An internal function used for aggregate \"group by\" operations.\r\n  var group = function(behavior, partition) {\r\n    return function(obj, iteratee, context) {\r\n      var result = partition ? [[], []] : {};\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(value, index) {\r\n        var key = iteratee(value, index, obj);\r\n        behavior(result, value, key);\r\n      });\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Groups the object's values by a criterion. Pass either a string attribute\r\n  // to group by, or a function that returns the criterion.\r\n  _.groupBy = group(function(result, value, key) {\r\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\r\n  });\r\n\r\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\r\n  // when you know that your index values will be unique.\r\n  _.indexBy = group(function(result, value, key) {\r\n    result[key] = value;\r\n  });\r\n\r\n  // Counts instances of an object that group by a certain criterion. Pass\r\n  // either a string attribute to count by, or a function that returns the\r\n  // criterion.\r\n  _.countBy = group(function(result, value, key) {\r\n    if (has(result, key)) result[key]++; else result[key] = 1;\r\n  });\r\n\r\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\r\n  // Safely create a real, live array from anything iterable.\r\n  _.toArray = function(obj) {\r\n    if (!obj) return [];\r\n    if (_.isArray(obj)) return slice.call(obj);\r\n    if (_.isString(obj)) {\r\n      // Keep surrogate pair characters together\r\n      return obj.match(reStrSymbol);\r\n    }\r\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\r\n    return _.values(obj);\r\n  };\r\n\r\n  // Return the number of elements in an object.\r\n  _.size = function(obj) {\r\n    if (obj == null) return 0;\r\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\r\n  };\r\n\r\n  // Split a collection into two arrays: one whose elements all satisfy the given\r\n  // predicate, and one whose elements all do not satisfy the predicate.\r\n  _.partition = group(function(result, value, pass) {\r\n    result[pass ? 0 : 1].push(value);\r\n  }, true);\r\n\r\n  // Array Functions\r\n  // ---------------\r\n\r\n  // Get the first element of an array. Passing **n** will return the first N\r\n  // values in the array. Aliased as `head` and `take`. The **guard** check\r\n  // allows it to work with `_.map`.\r\n  _.first = _.head = _.take = function(array, n, guard) {\r\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\r\n    if (n == null || guard) return array[0];\r\n    return _.initial(array, array.length - n);\r\n  };\r\n\r\n  // Returns everything but the last entry of the array. Especially useful on\r\n  // the arguments object. Passing **n** will return all the values in\r\n  // the array, excluding the last N.\r\n  _.initial = function(array, n, guard) {\r\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\r\n  };\r\n\r\n  // Get the last element of an array. Passing **n** will return the last N\r\n  // values in the array.\r\n  _.last = function(array, n, guard) {\r\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\r\n    if (n == null || guard) return array[array.length - 1];\r\n    return _.rest(array, Math.max(0, array.length - n));\r\n  };\r\n\r\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\r\n  // Especially useful on the arguments object. Passing an **n** will return\r\n  // the rest N values in the array.\r\n  _.rest = _.tail = _.drop = function(array, n, guard) {\r\n    return slice.call(array, n == null || guard ? 1 : n);\r\n  };\r\n\r\n  // Trim out all falsy values from an array.\r\n  _.compact = function(array) {\r\n    return _.filter(array, Boolean);\r\n  };\r\n\r\n  // Internal implementation of a recursive `flatten` function.\r\n  var flatten = function(input, shallow, strict, output) {\r\n    output = output || [];\r\n    var idx = output.length;\r\n    for (var i = 0, length = getLength(input); i < length; i++) {\r\n      var value = input[i];\r\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\r\n        // Flatten current level of array or arguments object.\r\n        if (shallow) {\r\n          var j = 0, len = value.length;\r\n          while (j < len) output[idx++] = value[j++];\r\n        } else {\r\n          flatten(value, shallow, strict, output);\r\n          idx = output.length;\r\n        }\r\n      } else if (!strict) {\r\n        output[idx++] = value;\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  // Flatten out an array, either recursively (by default), or just one level.\r\n  _.flatten = function(array, shallow) {\r\n    return flatten(array, shallow, false);\r\n  };\r\n\r\n  // Return a version of the array that does not contain the specified value(s).\r\n  _.without = restArguments(function(array, otherArrays) {\r\n    return _.difference(array, otherArrays);\r\n  });\r\n\r\n  // Produce a duplicate-free version of the array. If the array has already\r\n  // been sorted, you have the option of using a faster algorithm.\r\n  // The faster algorithm will not work with an iteratee if the iteratee\r\n  // is not a one-to-one function, so providing an iteratee will disable\r\n  // the faster algorithm.\r\n  // Aliased as `unique`.\r\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\r\n    if (!_.isBoolean(isSorted)) {\r\n      context = iteratee;\r\n      iteratee = isSorted;\r\n      isSorted = false;\r\n    }\r\n    if (iteratee != null) iteratee = cb(iteratee, context);\r\n    var result = [];\r\n    var seen = [];\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var value = array[i],\r\n          computed = iteratee ? iteratee(value, i, array) : value;\r\n      if (isSorted && !iteratee) {\r\n        if (!i || seen !== computed) result.push(value);\r\n        seen = computed;\r\n      } else if (iteratee) {\r\n        if (!_.contains(seen, computed)) {\r\n          seen.push(computed);\r\n          result.push(value);\r\n        }\r\n      } else if (!_.contains(result, value)) {\r\n        result.push(value);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Produce an array that contains the union: each distinct element from all of\r\n  // the passed-in arrays.\r\n  _.union = restArguments(function(arrays) {\r\n    return _.uniq(flatten(arrays, true, true));\r\n  });\r\n\r\n  // Produce an array that contains every item shared between all the\r\n  // passed-in arrays.\r\n  _.intersection = function(array) {\r\n    var result = [];\r\n    var argsLength = arguments.length;\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var item = array[i];\r\n      if (_.contains(result, item)) continue;\r\n      var j;\r\n      for (j = 1; j < argsLength; j++) {\r\n        if (!_.contains(arguments[j], item)) break;\r\n      }\r\n      if (j === argsLength) result.push(item);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Take the difference between one array and a number of other arrays.\r\n  // Only the elements present in just the first array will remain.\r\n  _.difference = restArguments(function(array, rest) {\r\n    rest = flatten(rest, true, true);\r\n    return _.filter(array, function(value){\r\n      return !_.contains(rest, value);\r\n    });\r\n  });\r\n\r\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\r\n  // each array's elements on shared indices.\r\n  _.unzip = function(array) {\r\n    var length = array && _.max(array, getLength).length || 0;\r\n    var result = Array(length);\r\n\r\n    for (var index = 0; index < length; index++) {\r\n      result[index] = _.pluck(array, index);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Zip together multiple lists into a single array -- elements that share\r\n  // an index go together.\r\n  _.zip = restArguments(_.unzip);\r\n\r\n  // Converts lists into objects. Pass either a single array of `[key, value]`\r\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\r\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\r\n  _.object = function(list, values) {\r\n    var result = {};\r\n    for (var i = 0, length = getLength(list); i < length; i++) {\r\n      if (values) {\r\n        result[list[i]] = values[i];\r\n      } else {\r\n        result[list[i][0]] = list[i][1];\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Generator function to create the findIndex and findLastIndex functions.\r\n  var createPredicateIndexFinder = function(dir) {\r\n    return function(array, predicate, context) {\r\n      predicate = cb(predicate, context);\r\n      var length = getLength(array);\r\n      var index = dir > 0 ? 0 : length - 1;\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        if (predicate(array[index], index, array)) return index;\r\n      }\r\n      return -1;\r\n    };\r\n  };\r\n\r\n  // Returns the first index on an array-like that passes a predicate test.\r\n  _.findIndex = createPredicateIndexFinder(1);\r\n  _.findLastIndex = createPredicateIndexFinder(-1);\r\n\r\n  // Use a comparator function to figure out the smallest index at which\r\n  // an object should be inserted so as to maintain order. Uses binary search.\r\n  _.sortedIndex = function(array, obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context, 1);\r\n    var value = iteratee(obj);\r\n    var low = 0, high = getLength(array);\r\n    while (low < high) {\r\n      var mid = Math.floor((low + high) / 2);\r\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\r\n    }\r\n    return low;\r\n  };\r\n\r\n  // Generator function to create the indexOf and lastIndexOf functions.\r\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\r\n    return function(array, item, idx) {\r\n      var i = 0, length = getLength(array);\r\n      if (typeof idx == 'number') {\r\n        if (dir > 0) {\r\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\r\n        } else {\r\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\r\n        }\r\n      } else if (sortedIndex && idx && length) {\r\n        idx = sortedIndex(array, item);\r\n        return array[idx] === item ? idx : -1;\r\n      }\r\n      if (item !== item) {\r\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\r\n        return idx >= 0 ? idx + i : -1;\r\n      }\r\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\r\n        if (array[idx] === item) return idx;\r\n      }\r\n      return -1;\r\n    };\r\n  };\r\n\r\n  // Return the position of the first occurrence of an item in an array,\r\n  // or -1 if the item is not included in the array.\r\n  // If the array is large and already in sort order, pass `true`\r\n  // for **isSorted** to use binary search.\r\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\r\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\r\n\r\n  // Generate an integer Array containing an arithmetic progression. A port of\r\n  // the native Python `range()` function. See\r\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\r\n  _.range = function(start, stop, step) {\r\n    if (stop == null) {\r\n      stop = start || 0;\r\n      start = 0;\r\n    }\r\n    if (!step) {\r\n      step = stop < start ? -1 : 1;\r\n    }\r\n\r\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\r\n    var range = Array(length);\r\n\r\n    for (var idx = 0; idx < length; idx++, start += step) {\r\n      range[idx] = start;\r\n    }\r\n\r\n    return range;\r\n  };\r\n\r\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\r\n  // items.\r\n  _.chunk = function(array, count) {\r\n    if (count == null || count < 1) return [];\r\n    var result = [];\r\n    var i = 0, length = array.length;\r\n    while (i < length) {\r\n      result.push(slice.call(array, i, i += count));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Function (ahem) Functions\r\n  // ------------------\r\n\r\n  // Determines whether to execute a function as a constructor\r\n  // or a normal function with the provided arguments.\r\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\r\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\r\n    var self = baseCreate(sourceFunc.prototype);\r\n    var result = sourceFunc.apply(self, args);\r\n    if (_.isObject(result)) return result;\r\n    return self;\r\n  };\r\n\r\n  // Create a function bound to a given object (assigning `this`, and arguments,\r\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\r\n  // available.\r\n  _.bind = restArguments(function(func, context, args) {\r\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\r\n    var bound = restArguments(function(callArgs) {\r\n      return executeBound(func, bound, context, this, args.concat(callArgs));\r\n    });\r\n    return bound;\r\n  });\r\n\r\n  // Partially apply a function by creating a version that has had some of its\r\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\r\n  // as a placeholder by default, allowing any combination of arguments to be\r\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\r\n  _.partial = restArguments(function(func, boundArgs) {\r\n    var placeholder = _.partial.placeholder;\r\n    var bound = function() {\r\n      var position = 0, length = boundArgs.length;\r\n      var args = Array(length);\r\n      for (var i = 0; i < length; i++) {\r\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\r\n      }\r\n      while (position < arguments.length) args.push(arguments[position++]);\r\n      return executeBound(func, bound, this, this, args);\r\n    };\r\n    return bound;\r\n  });\r\n\r\n  _.partial.placeholder = _;\r\n\r\n  // Bind a number of an object's methods to that object. Remaining arguments\r\n  // are the method names to be bound. Useful for ensuring that all callbacks\r\n  // defined on an object belong to it.\r\n  _.bindAll = restArguments(function(obj, keys) {\r\n    keys = flatten(keys, false, false);\r\n    var index = keys.length;\r\n    if (index < 1) throw new Error('bindAll must be passed function names');\r\n    while (index--) {\r\n      var key = keys[index];\r\n      obj[key] = _.bind(obj[key], obj);\r\n    }\r\n  });\r\n\r\n  // Memoize an expensive function by storing its results.\r\n  _.memoize = function(func, hasher) {\r\n    var memoize = function(key) {\r\n      var cache = memoize.cache;\r\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\r\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\r\n      return cache[address];\r\n    };\r\n    memoize.cache = {};\r\n    return memoize;\r\n  };\r\n\r\n  // Delays a function for the given number of milliseconds, and then calls\r\n  // it with the arguments supplied.\r\n  _.delay = restArguments(function(func, wait, args) {\r\n    return setTimeout(function() {\r\n      return func.apply(null, args);\r\n    }, wait);\r\n  });\r\n\r\n  // Defers a function, scheduling it to run after the current call stack has\r\n  // cleared.\r\n  _.defer = _.partial(_.delay, _, 1);\r\n\r\n  // Returns a function, that, when invoked, will only be triggered at most once\r\n  // during a given window of time. Normally, the throttled function will run\r\n  // as much as it can, without ever going more than once per `wait` duration;\r\n  // but if you'd like to disable the execution on the leading edge, pass\r\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\r\n  _.throttle = function(func, wait, options) {\r\n    var timeout, context, args, result;\r\n    var previous = 0;\r\n    if (!options) options = {};\r\n\r\n    var later = function() {\r\n      previous = options.leading === false ? 0 : _.now();\r\n      timeout = null;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    };\r\n\r\n    var throttled = function() {\r\n      var now = _.now();\r\n      if (!previous && options.leading === false) previous = now;\r\n      var remaining = wait - (now - previous);\r\n      context = this;\r\n      args = arguments;\r\n      if (remaining <= 0 || remaining > wait) {\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n          timeout = null;\r\n        }\r\n        previous = now;\r\n        result = func.apply(context, args);\r\n        if (!timeout) context = args = null;\r\n      } else if (!timeout && options.trailing !== false) {\r\n        timeout = setTimeout(later, remaining);\r\n      }\r\n      return result;\r\n    };\r\n\r\n    throttled.cancel = function() {\r\n      clearTimeout(timeout);\r\n      previous = 0;\r\n      timeout = context = args = null;\r\n    };\r\n\r\n    return throttled;\r\n  };\r\n\r\n  // Returns a function, that, as long as it continues to be invoked, will not\r\n  // be triggered. The function will be called after it stops being called for\r\n  // N milliseconds. If `immediate` is passed, trigger the function on the\r\n  // leading edge, instead of the trailing.\r\n  _.debounce = function(func, wait, immediate) {\r\n    var timeout, result;\r\n\r\n    var later = function(context, args) {\r\n      timeout = null;\r\n      if (args) result = func.apply(context, args);\r\n    };\r\n\r\n    var debounced = restArguments(function(args) {\r\n      if (timeout) clearTimeout(timeout);\r\n      if (immediate) {\r\n        var callNow = !timeout;\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) result = func.apply(this, args);\r\n      } else {\r\n        timeout = _.delay(later, wait, this, args);\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    debounced.cancel = function() {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n    };\r\n\r\n    return debounced;\r\n  };\r\n\r\n  // Returns the first function passed as an argument to the second,\r\n  // allowing you to adjust arguments, run code before and after, and\r\n  // conditionally execute the original function.\r\n  _.wrap = function(func, wrapper) {\r\n    return _.partial(wrapper, func);\r\n  };\r\n\r\n  // Returns a negated version of the passed-in predicate.\r\n  _.negate = function(predicate) {\r\n    return function() {\r\n      return !predicate.apply(this, arguments);\r\n    };\r\n  };\r\n\r\n  // Returns a function that is the composition of a list of functions, each\r\n  // consuming the return value of the function that follows.\r\n  _.compose = function() {\r\n    var args = arguments;\r\n    var start = args.length - 1;\r\n    return function() {\r\n      var i = start;\r\n      var result = args[start].apply(this, arguments);\r\n      while (i--) result = args[i].call(this, result);\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Returns a function that will only be executed on and after the Nth call.\r\n  _.after = function(times, func) {\r\n    return function() {\r\n      if (--times < 1) {\r\n        return func.apply(this, arguments);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Returns a function that will only be executed up to (but not including) the Nth call.\r\n  _.before = function(times, func) {\r\n    var memo;\r\n    return function() {\r\n      if (--times > 0) {\r\n        memo = func.apply(this, arguments);\r\n      }\r\n      if (times <= 1) func = null;\r\n      return memo;\r\n    };\r\n  };\r\n\r\n  // Returns a function that will be executed at most one time, no matter how\r\n  // often you call it. Useful for lazy initialization.\r\n  _.once = _.partial(_.before, 2);\r\n\r\n  _.restArguments = restArguments;\r\n\r\n  // Object Functions\r\n  // ----------------\r\n\r\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\r\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\r\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\r\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\r\n\r\n  var collectNonEnumProps = function(obj, keys) {\r\n    var nonEnumIdx = nonEnumerableProps.length;\r\n    var constructor = obj.constructor;\r\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\r\n\r\n    // Constructor is a special case.\r\n    var prop = 'constructor';\r\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\r\n\r\n    while (nonEnumIdx--) {\r\n      prop = nonEnumerableProps[nonEnumIdx];\r\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\r\n        keys.push(prop);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Retrieve the names of an object's own properties.\r\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n  _.keys = function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    if (nativeKeys) return nativeKeys(obj);\r\n    var keys = [];\r\n    for (var key in obj) if (has(obj, key)) keys.push(key);\r\n    // Ahem, IE < 9.\r\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n    return keys;\r\n  };\r\n\r\n  // Retrieve all the property names of an object.\r\n  _.allKeys = function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    var keys = [];\r\n    for (var key in obj) keys.push(key);\r\n    // Ahem, IE < 9.\r\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n    return keys;\r\n  };\r\n\r\n  // Retrieve the values of an object's properties.\r\n  _.values = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var values = Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      values[i] = obj[keys[i]];\r\n    }\r\n    return values;\r\n  };\r\n\r\n  // Returns the results of applying the iteratee to each element of the object.\r\n  // In contrast to _.map it returns an object.\r\n  _.mapObject = function(obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context);\r\n    var keys = _.keys(obj),\r\n        length = keys.length,\r\n        results = {};\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys[index];\r\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  // Convert an object into a list of `[key, value]` pairs.\r\n  // The opposite of _.object.\r\n  _.pairs = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var pairs = Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      pairs[i] = [keys[i], obj[keys[i]]];\r\n    }\r\n    return pairs;\r\n  };\r\n\r\n  // Invert the keys and values of an object. The values must be serializable.\r\n  _.invert = function(obj) {\r\n    var result = {};\r\n    var keys = _.keys(obj);\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      result[obj[keys[i]]] = keys[i];\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Return a sorted list of the function names available on the object.\r\n  // Aliased as `methods`.\r\n  _.functions = _.methods = function(obj) {\r\n    var names = [];\r\n    for (var key in obj) {\r\n      if (_.isFunction(obj[key])) names.push(key);\r\n    }\r\n    return names.sort();\r\n  };\r\n\r\n  // An internal function for creating assigner functions.\r\n  var createAssigner = function(keysFunc, defaults) {\r\n    return function(obj) {\r\n      var length = arguments.length;\r\n      if (defaults) obj = Object(obj);\r\n      if (length < 2 || obj == null) return obj;\r\n      for (var index = 1; index < length; index++) {\r\n        var source = arguments[index],\r\n            keys = keysFunc(source),\r\n            l = keys.length;\r\n        for (var i = 0; i < l; i++) {\r\n          var key = keys[i];\r\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n        }\r\n      }\r\n      return obj;\r\n    };\r\n  };\r\n\r\n  // Extend a given object with all the properties in passed-in object(s).\r\n  _.extend = createAssigner(_.allKeys);\r\n\r\n  // Assigns a given object with all the own properties in the passed-in object(s).\r\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n  _.extendOwn = _.assign = createAssigner(_.keys);\r\n\r\n  // Returns the first key on an object that passes a predicate test.\r\n  _.findKey = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = _.keys(obj), key;\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      key = keys[i];\r\n      if (predicate(obj[key], key, obj)) return key;\r\n    }\r\n  };\r\n\r\n  // Internal pick helper function to determine if `obj` has key `key`.\r\n  var keyInObj = function(value, key, obj) {\r\n    return key in obj;\r\n  };\r\n\r\n  // Return a copy of the object only containing the whitelisted properties.\r\n  _.pick = restArguments(function(obj, keys) {\r\n    var result = {}, iteratee = keys[0];\r\n    if (obj == null) return result;\r\n    if (_.isFunction(iteratee)) {\r\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\r\n      keys = _.allKeys(obj);\r\n    } else {\r\n      iteratee = keyInObj;\r\n      keys = flatten(keys, false, false);\r\n      obj = Object(obj);\r\n    }\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      var key = keys[i];\r\n      var value = obj[key];\r\n      if (iteratee(value, key, obj)) result[key] = value;\r\n    }\r\n    return result;\r\n  });\r\n\r\n  // Return a copy of the object without the blacklisted properties.\r\n  _.omit = restArguments(function(obj, keys) {\r\n    var iteratee = keys[0], context;\r\n    if (_.isFunction(iteratee)) {\r\n      iteratee = _.negate(iteratee);\r\n      if (keys.length > 1) context = keys[1];\r\n    } else {\r\n      keys = _.map(flatten(keys, false, false), String);\r\n      iteratee = function(value, key) {\r\n        return !_.contains(keys, key);\r\n      };\r\n    }\r\n    return _.pick(obj, iteratee, context);\r\n  });\r\n\r\n  // Fill in a given object with default properties.\r\n  _.defaults = createAssigner(_.allKeys, true);\r\n\r\n  // Creates an object that inherits from the given prototype object.\r\n  // If additional properties are provided then they will be added to the\r\n  // created object.\r\n  _.create = function(prototype, props) {\r\n    var result = baseCreate(prototype);\r\n    if (props) _.extendOwn(result, props);\r\n    return result;\r\n  };\r\n\r\n  // Create a (shallow-cloned) duplicate of an object.\r\n  _.clone = function(obj) {\r\n    if (!_.isObject(obj)) return obj;\r\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n  };\r\n\r\n  // Invokes interceptor with the obj, and then returns obj.\r\n  // The primary purpose of this method is to \"tap into\" a method chain, in\r\n  // order to perform operations on intermediate results within the chain.\r\n  _.tap = function(obj, interceptor) {\r\n    interceptor(obj);\r\n    return obj;\r\n  };\r\n\r\n  // Returns whether an object has a given set of `key:value` pairs.\r\n  _.isMatch = function(object, attrs) {\r\n    var keys = _.keys(attrs), length = keys.length;\r\n    if (object == null) return !length;\r\n    var obj = Object(object);\r\n    for (var i = 0; i < length; i++) {\r\n      var key = keys[i];\r\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  var eq, deepEq;\r\n  eq = function(a, b, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n    // `null` or `undefined` only equal to itself (strict comparison).\r\n    if (a == null || b == null) return false;\r\n    // `NaN`s are equivalent, but non-reflexive.\r\n    if (a !== a) return b !== b;\r\n    // Exhaust primitive checks\r\n    var type = typeof a;\r\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n    return deepEq(a, b, aStack, bStack);\r\n  };\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  deepEq = function(a, b, aStack, bStack) {\r\n    // Unwrap any wrapped objects.\r\n    if (a instanceof _) a = a._wrapped;\r\n    if (b instanceof _) b = b._wrapped;\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className !== toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n      case '[object RegExp]':\r\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n      case '[object String]':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return '' + a === '' + b;\r\n      case '[object Number]':\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        // Object(NaN) is equivalent to NaN.\r\n        if (+a !== +a) return +b !== +b;\r\n        // An `egal` comparison is performed for other numeric values.\r\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n      case '[object Date]':\r\n      case '[object Boolean]':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a === +b;\r\n      case '[object Symbol]':\r\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n    }\r\n\r\n    var areArrays = className === '[object Array]';\r\n    if (!areArrays) {\r\n      if (typeof a != 'object' || typeof b != 'object') return false;\r\n\r\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n      // from different frames are.\r\n      var aCtor = a.constructor, bCtor = b.constructor;\r\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n        return false;\r\n      }\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] === a) return bStack[length] === b;\r\n    }\r\n\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      // Deep compare the contents, ignoring non-numeric properties.\r\n      while (length--) {\r\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      var keys = _.keys(a), key;\r\n      length = keys.length;\r\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n      if (_.keys(b).length !== length) return false;\r\n      while (length--) {\r\n        // Deep compare each member\r\n        key = keys[length];\r\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n  };\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n  _.isEqual = function(a, b) {\r\n    return eq(a, b);\r\n  };\r\n\r\n  // Is a given array, string, or object empty?\r\n  // An \"empty\" object has no enumerable own-properties.\r\n  _.isEmpty = function(obj) {\r\n    if (obj == null) return true;\r\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\r\n    return _.keys(obj).length === 0;\r\n  };\r\n\r\n  // Is a given value a DOM element?\r\n  _.isElement = function(obj) {\r\n    return !!(obj && obj.nodeType === 1);\r\n  };\r\n\r\n  // Is a given value an array?\r\n  // Delegates to ECMA5's native Array.isArray\r\n  _.isArray = nativeIsArray || function(obj) {\r\n    return toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  // Is a given variable an object?\r\n  _.isObject = function(obj) {\r\n    var type = typeof obj;\r\n    return type === 'function' || type === 'object' && !!obj;\r\n  };\r\n\r\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\r\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\r\n    _['is' + name] = function(obj) {\r\n      return toString.call(obj) === '[object ' + name + ']';\r\n    };\r\n  });\r\n\r\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\r\n  // there isn't any inspectable \"Arguments\" type.\r\n  if (!_.isArguments(arguments)) {\r\n    _.isArguments = function(obj) {\r\n      return has(obj, 'callee');\r\n    };\r\n  }\r\n\r\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\r\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\r\n  var nodelist = root.document && root.document.childNodes;\r\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\r\n    _.isFunction = function(obj) {\r\n      return typeof obj == 'function' || false;\r\n    };\r\n  }\r\n\r\n  // Is a given object a finite number?\r\n  _.isFinite = function(obj) {\r\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\r\n  };\r\n\r\n  // Is the given value `NaN`?\r\n  _.isNaN = function(obj) {\r\n    return _.isNumber(obj) && isNaN(obj);\r\n  };\r\n\r\n  // Is a given value a boolean?\r\n  _.isBoolean = function(obj) {\r\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n  };\r\n\r\n  // Is a given value equal to null?\r\n  _.isNull = function(obj) {\r\n    return obj === null;\r\n  };\r\n\r\n  // Is a given variable undefined?\r\n  _.isUndefined = function(obj) {\r\n    return obj === void 0;\r\n  };\r\n\r\n  // Shortcut function for checking if an object has a given property directly\r\n  // on itself (in other words, not on a prototype).\r\n  _.has = function(obj, path) {\r\n    if (!_.isArray(path)) {\r\n      return has(obj, path);\r\n    }\r\n    var length = path.length;\r\n    for (var i = 0; i < length; i++) {\r\n      var key = path[i];\r\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n        return false;\r\n      }\r\n      obj = obj[key];\r\n    }\r\n    return !!length;\r\n  };\r\n\r\n  // Utility Functions\r\n  // -----------------\r\n\r\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\r\n  // previous owner. Returns a reference to the Underscore object.\r\n  _.noConflict = function() {\r\n    root._ = previousUnderscore;\r\n    return this;\r\n  };\r\n\r\n  // Keep the identity function around for default iteratees.\r\n  _.identity = function(value) {\r\n    return value;\r\n  };\r\n\r\n  // Predicate-generating functions. Often useful outside of Underscore.\r\n  _.constant = function(value) {\r\n    return function() {\r\n      return value;\r\n    };\r\n  };\r\n\r\n  _.noop = function(){};\r\n\r\n  // Creates a function that, when passed an object, will traverse that object’s\r\n  // properties down the given `path`, specified as an array of keys or indexes.\r\n  _.property = function(path) {\r\n    if (!_.isArray(path)) {\r\n      return shallowProperty(path);\r\n    }\r\n    return function(obj) {\r\n      return deepGet(obj, path);\r\n    };\r\n  };\r\n\r\n  // Generates a function for a given object that returns a given property.\r\n  _.propertyOf = function(obj) {\r\n    if (obj == null) {\r\n      return function(){};\r\n    }\r\n    return function(path) {\r\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\r\n    };\r\n  };\r\n\r\n  // Returns a predicate for checking whether an object has a given set of\r\n  // `key:value` pairs.\r\n  _.matcher = _.matches = function(attrs) {\r\n    attrs = _.extendOwn({}, attrs);\r\n    return function(obj) {\r\n      return _.isMatch(obj, attrs);\r\n    };\r\n  };\r\n\r\n  // Run a function **n** times.\r\n  _.times = function(n, iteratee, context) {\r\n    var accum = Array(Math.max(0, n));\r\n    iteratee = optimizeCb(iteratee, context, 1);\r\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\r\n    return accum;\r\n  };\r\n\r\n  // Return a random integer between min and max (inclusive).\r\n  _.random = function(min, max) {\r\n    if (max == null) {\r\n      max = min;\r\n      min = 0;\r\n    }\r\n    return min + Math.floor(Math.random() * (max - min + 1));\r\n  };\r\n\r\n  // A (possibly faster) way to get the current timestamp as an integer.\r\n  _.now = Date.now || function() {\r\n    return new Date().getTime();\r\n  };\r\n\r\n  // List of HTML entities for escaping.\r\n  var escapeMap = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#x27;',\r\n    '`': '&#x60;'\r\n  };\r\n  var unescapeMap = _.invert(escapeMap);\r\n\r\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\r\n  var createEscaper = function(map) {\r\n    var escaper = function(match) {\r\n      return map[match];\r\n    };\r\n    // Regexes for identifying a key that needs to be escaped.\r\n    var source = '(?:' + _.keys(map).join('|') + ')';\r\n    var testRegexp = RegExp(source);\r\n    var replaceRegexp = RegExp(source, 'g');\r\n    return function(string) {\r\n      string = string == null ? '' : '' + string;\r\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\r\n    };\r\n  };\r\n  _.escape = createEscaper(escapeMap);\r\n  _.unescape = createEscaper(unescapeMap);\r\n\r\n  // Traverses the children of `obj` along `path`. If a child is a function, it\r\n  // is invoked with its parent as context. Returns the value of the final\r\n  // child, or `fallback` if any child is undefined.\r\n  _.result = function(obj, path, fallback) {\r\n    if (!_.isArray(path)) path = [path];\r\n    var length = path.length;\r\n    if (!length) {\r\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\r\n    }\r\n    for (var i = 0; i < length; i++) {\r\n      var prop = obj == null ? void 0 : obj[path[i]];\r\n      if (prop === void 0) {\r\n        prop = fallback;\r\n        i = length; // Ensure we don't continue iterating.\r\n      }\r\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  // Generate a unique integer id (unique within the entire client session).\r\n  // Useful for temporary DOM ids.\r\n  var idCounter = 0;\r\n  _.uniqueId = function(prefix) {\r\n    var id = ++idCounter + '';\r\n    return prefix ? prefix + id : id;\r\n  };\r\n\r\n  // By default, Underscore uses ERB-style template delimiters, change the\r\n  // following template settings to use alternative delimiters.\r\n  _.templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n  // When customizing `templateSettings`, if you don't want to define an\r\n  // interpolation, evaluation or escaping regex, we need one that is\r\n  // guaranteed not to match.\r\n  var noMatch = /(.)^/;\r\n\r\n  // Certain characters need to be escaped so that they can be put into a\r\n  // string literal.\r\n  var escapes = {\r\n    \"'\": \"'\",\r\n    '\\\\': '\\\\',\r\n    '\\r': 'r',\r\n    '\\n': 'n',\r\n    '\\u2028': 'u2028',\r\n    '\\u2029': 'u2029'\r\n  };\r\n\r\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\r\n\r\n  var escapeChar = function(match) {\r\n    return '\\\\' + escapes[match];\r\n  };\r\n\r\n  // JavaScript micro-templating, similar to John Resig's implementation.\r\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\r\n  // and correctly escapes quotes within interpolated code.\r\n  // NB: `oldSettings` only exists for backwards compatibility.\r\n  _.template = function(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\r\n  _.chain = function(obj) {\r\n    var instance = _(obj);\r\n    instance._chain = true;\r\n    return instance;\r\n  };\r\n\r\n  // OOP\r\n  // ---------------\r\n  // If Underscore is called as a function, it returns a wrapped object that\r\n  // can be used OO-style. This wrapper holds altered versions of all the\r\n  // underscore functions. Wrapped objects may be chained.\r\n\r\n  // Helper function to continue chaining intermediate results.\r\n  var chainResult = function(instance, obj) {\r\n    return instance._chain ? _(obj).chain() : obj;\r\n  };\r\n\r\n  // Add your own custom functions to the Underscore object.\r\n  _.mixin = function(obj) {\r\n    _.each(_.functions(obj), function(name) {\r\n      var func = _[name] = obj[name];\r\n      _.prototype[name] = function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      };\r\n    });\r\n    return _;\r\n  };\r\n\r\n  // Add all of the Underscore functions to the wrapper object.\r\n  _.mixin(_);\r\n\r\n  // Add all mutator Array functions to the wrapper.\r\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      var obj = this._wrapped;\r\n      method.apply(obj, arguments);\r\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\r\n      return chainResult(this, obj);\r\n    };\r\n  });\r\n\r\n  // Add all accessor Array functions to the wrapper.\r\n  _.each(['concat', 'join', 'slice'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      return chainResult(this, method.apply(this._wrapped, arguments));\r\n    };\r\n  });\r\n\r\n  // Extracts the result from a wrapped and chained object.\r\n  _.prototype.value = function() {\r\n    return this._wrapped;\r\n  };\r\n\r\n  // Provide unwrapping proxy for some methods used in engine operations\r\n  // such as arithmetic and JSON stringification.\r\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\r\n\r\n  _.prototype.toString = function() {\r\n    return String(this._wrapped);\r\n  };\r\n\r\n  return skylark.underscore = _;\r\n});\ndefine('skylark-backbone/helper',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\"\r\n],function(langx,_,Backbone){\r\n\r\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\r\n  // `attributes` object or collection's `models` array behind the scenes.\r\n  //\r\n  // collection.filter(function(model) { return model.get('age') > 10 });\r\n  // collection.each(this.addView);\r\n  //\r\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\r\n  var addMethod = function(length, method, attribute) {\r\n    switch (length) {\r\n      case 1: return function() {\r\n        return _[method](this[attribute]);\r\n      };\r\n      case 2: return function(value) {\r\n        return _[method](this[attribute], value);\r\n      };\r\n      case 3: return function(iteratee, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), context);\r\n      };\r\n      case 4: return function(iteratee, defaultVal, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\r\n      };\r\n      default: return function() {\r\n        var args = slice.call(arguments);\r\n        args.unshift(this[attribute]);\r\n        return _[method].apply(_, args);\r\n      };\r\n    }\r\n  };\r\n\r\n  var addUnderscoreMethods = function(Class, methods, attribute) {\r\n    _.each(methods, function(length, method) {\r\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\r\n    });\r\n  };\r\n\r\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\r\n  var cb = function(iteratee, instance) {\r\n    if (_.isFunction(iteratee)) return iteratee;\r\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\r\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\r\n    return iteratee;\r\n  };\r\n\r\n  var modelMatcher = function(attrs) {\r\n    var matcher = _.matches(attrs);\r\n    return function(model) {\r\n      return matcher(model.attributes);\r\n    };\r\n  };\r\n\r\n  var extend  = Backbone.extend = function(protoProps, staticProps){\r\n    protoProps.constructor = this._constructor;\r\n    var child = this.inherit(protoProps);\r\n    _.extend(child,staticProps);\r\n  \r\n    return child;\r\n  };\r\n\r\n  return {\r\n    addUnderscoreMethods : addUnderscoreMethods,\r\n    extend : extend\r\n  };\r\n});\ndefine('skylark-backbone/Collection',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-fw-model\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,models,Backbone,events,helper){\r\n\r\n  // Backbone.Collection\r\n  // -------------------\r\n\r\n  // If models tend to represent a single row of data, a Backbone Collection is\r\n  // more analogous to a table full of data ... or a small slice or page of that\r\n  // table, or a collection of rows that belong together for a particular reason\r\n  // -- all of the messages in this particular folder, all of the documents\r\n  // belonging to this particular author, and so on. Collections maintain\r\n  // indexes of their models, both in order, and for lookup by `id`.\r\n\r\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\r\n  // If a `comparator` is specified, the Collection will maintain\r\n  // its models in sort order, as they're added and removed.\r\n\r\n  var Collection = Backbone.Collection = models.Collection.inherit({\r\n      _construct : function(models, options) {\r\n        options || (options = {});\r\n        if (options.model) this.model = options.model;\r\n        if (options.comparator !== void 0) this.comparator = options.comparator;\r\n        this._reset();\r\n        this.initialize.apply(this, arguments);\r\n        if (models) this.reset(models, _.extend({silent: true}, options));\r\n      },\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      sync: function() {\r\n        return Backbone.sync.apply(this, arguments);\r\n      }\r\n\r\n  });\r\n\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial(events.EventExtends);\r\n\r\n  Object.defineProperty(Collection.prototype, \"model\",{\r\n    get() { return this.entity; },\r\n    set(newValue) { this.entity = newValue; }\r\n  });\r\n\r\n  Object.defineProperty(Collection.prototype, \"models\",{\r\n    get() { return this.entities; },\r\n    set(newValue) { this.entities = newValue; }\r\n  });\r\n\r\n  Collection.prototype.modelId = Collection.prototype.entityId;\r\n  Collection.prototype._isModel = Collection.prototype._isEntity;\r\n\r\n\r\n  // Underscore methods that we want to implement on the Collection.\r\n  // 90% of the core usefulness of Backbone Collections is actually implemented\r\n  // right here:\r\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\r\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\r\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\r\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\r\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\r\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\r\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\r\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\r\n\r\n  // Mix in each Underscore method as a proxy to `Collection#models`.\r\n  helper.addUnderscoreMethods(Collection, collectionMethods, 'models');\r\n\r\n  Collection.extend = helper.extend;\r\n\r\n  return Collection;\r\n\r\n});\ndefine('skylark-backbone/Model',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"skylark-fw-model\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,_,models,Backbone,events,helper){\r\n\r\n  // Backbone.Model\r\n  // --------------\r\n\r\n  // Backbone **Models** are the basic data object in the framework --\r\n  // frequently representing a row in a table in a database on your server.\r\n  // A discrete chunk of data and a bunch of useful, related methods for\r\n  // performing computations and transformations on that data.\r\n\r\n  // Create a new model with the specified attributes. A client id (`cid`)\r\n  // is automatically generated and assigned for you.\r\n  var Model = Backbone.Model = models.Entity.inherit({\r\n      _construct : function(attributes, options) {\r\n        langx.Stateful.prototype._construct.apply(this,arguments);\r\n        this.initialize.apply(this, arguments);\r\n      },\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      // Get the HTML-escaped value of an attribute.\r\n      escape: function(attr) {\r\n        return _.escape(this.get(attr));\r\n      },\r\n\r\n      // Special-cased proxy to underscore's `_.matches` method.\r\n      matches: function(attrs) {\r\n        return !!_.iteratee(attrs, this)(this.attributes);\r\n      },\r\n\r\n      // Proxy `Backbone.sync` by default.\r\n      sync: function() {\r\n        return Backbone.sync.apply(this, arguments);\r\n      }\r\n });\r\n\r\n\r\n\r\n  // Attach all inheritable methods to the Model prototype.\r\n  Model.partial(events.EventExtends);\r\n\r\n  Model.extend = helper.extend;\r\n\r\n  return Model;\r\n});\ndefine('skylark-backbone/History',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,_,Backbone,events,helper){\r\n\r\n // Backbone.History\r\n  // ----------------\r\n\r\n  // Handles cross-browser history management, based on either\r\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\r\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\r\n  // and URL fragments. If the browser supports neither (old IE, natch),\r\n  // falls back to polling.\r\n  var History = Backbone.History = events.BackboneEvented.inherit({\r\n    _construct : function() {\r\n        this.handlers = [];\r\n        this.checkUrl = _.bind(this.checkUrl, this);\r\n    \r\n        // Ensure that `History` can be used outside of the browser.\r\n        if (typeof window !== 'undefined') {\r\n          this.location = window.location;\r\n          this.history = window.history;\r\n        }\r\n    }\r\n  });\r\n\r\n  // Cached regex for stripping a leading hash/slash and trailing space.\r\n  var routeStripper = /^[#\\/]|\\s+$/g;\r\n\r\n  // Cached regex for stripping leading and trailing slashes.\r\n  var rootStripper = /^\\/+|\\/+$/g;\r\n\r\n  // Cached regex for stripping urls of hash.\r\n  var pathStripper = /#.*$/;\r\n\r\n  // Has the history handling already been started?\r\n  History.started = false;\r\n\r\n  // Set up all inheritable **Backbone.History** properties and methods.\r\n  History.partial({\r\n\r\n    // The default interval to poll for hash changes, if necessary, is\r\n    // twenty times a second.\r\n    interval: 50,\r\n\r\n    // Are we at the app root?\r\n    atRoot: function() {\r\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\r\n      return path === this.root && !this.getSearch();\r\n    },\r\n\r\n    // Does the pathname match the root?\r\n    matchRoot: function() {\r\n      var path = this.decodeFragment(this.location.pathname);\r\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\r\n      return rootPath === this.root;\r\n    },\r\n\r\n    // Unicode characters in `location.pathname` are percent encoded so they're\r\n    // decoded for comparison. `%25` should not be decoded since it may be part\r\n    // of an encoded parameter.\r\n    decodeFragment: function(fragment) {\r\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\r\n    },\r\n\r\n    // In IE6, the hash fragment and search params are incorrect if the\r\n    // fragment contains `?`.\r\n    getSearch: function() {\r\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\r\n      return match ? match[0] : '';\r\n    },\r\n\r\n    // Gets the true hash value. Cannot use location.hash directly due to bug\r\n    // in Firefox where location.hash will always be decoded.\r\n    getHash: function(window) {\r\n      var match = (window || this).location.href.match(/#(.*)$/);\r\n      return match ? match[1] : '';\r\n    },\r\n\r\n    // Get the pathname and search params, without the root.\r\n    getPath: function() {\r\n      var path = this.decodeFragment(\r\n        this.location.pathname + this.getSearch()\r\n      ).slice(this.root.length - 1);\r\n      return path.charAt(0) === '/' ? path.slice(1) : path;\r\n    },\r\n\r\n    // Get the cross-browser normalized URL fragment from the path or hash.\r\n    getFragment: function(fragment) {\r\n      if (fragment == null) {\r\n        if (this._usePushState || !this._wantsHashChange) {\r\n          fragment = this.getPath();\r\n        } else {\r\n          fragment = this.getHash();\r\n        }\r\n      }\r\n      return fragment.replace(routeStripper, '');\r\n    },\r\n\r\n    // Start the hash change handling, returning `true` if the current URL matches\r\n    // an existing route, and `false` otherwise.\r\n    start: function(options) {\r\n      if (History.started) throw new Error('Backbone.history has already been started');\r\n      History.started = true;\r\n\r\n      // Figure out the initial configuration. Do we need an iframe?\r\n      // Is pushState desired ... is it available?\r\n      this.options          = _.extend({root: '/'}, this.options, options);\r\n      this.root             = this.options.root;\r\n      this._wantsHashChange = this.options.hashChange !== false;\r\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\r\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\r\n      this._wantsPushState  = !!this.options.pushState;\r\n      this._hasPushState    = !!(this.history && this.history.pushState);\r\n      this._usePushState    = this._wantsPushState && this._hasPushState;\r\n      this.fragment         = this.getFragment();\r\n\r\n      // Normalize root to always include a leading and trailing slash.\r\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\r\n\r\n      // Transition from hashChange to pushState or vice versa if both are\r\n      // requested.\r\n      if (this._wantsHashChange && this._wantsPushState) {\r\n\r\n        // If we've started off with a route from a `pushState`-enabled\r\n        // browser, but we're currently in a browser that doesn't support it...\r\n        if (!this._hasPushState && !this.atRoot()) {\r\n          var rootPath = this.root.slice(0, -1) || '/';\r\n          this.location.replace(rootPath + '#' + this.getPath());\r\n          // Return immediately as browser will do redirect to new url\r\n          return true;\r\n\r\n        // Or if we've started out with a hash-based route, but we're currently\r\n        // in a browser where it could be `pushState`-based instead...\r\n        } else if (this._hasPushState && this.atRoot()) {\r\n          this.navigate(this.getHash(), {replace: true});\r\n        }\r\n\r\n      }\r\n\r\n      // Proxy an iframe to handle location events if the browser doesn't\r\n      // support the `hashchange` event, HTML5 history, or the user wants\r\n      // `hashChange` but not `pushState`.\r\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\r\n        this.iframe = document.createElement('iframe');\r\n        this.iframe.src = 'javascript:0';\r\n        this.iframe.style.display = 'none';\r\n        this.iframe.tabIndex = -1;\r\n        var body = document.body;\r\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\r\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\r\n        iWindow.document.open();\r\n        iWindow.document.close();\r\n        iWindow.location.hash = '#' + this.fragment;\r\n      }\r\n\r\n      // Add a cross-platform `addEventListener` shim for older browsers.\r\n      var addEventListener = window.addEventListener || function(eventName, listener) {\r\n        return attachEvent('on' + eventName, listener);\r\n      };\r\n\r\n      // Depending on whether we're using pushState or hashes, and whether\r\n      // 'onhashchange' is supported, determine how we check the URL state.\r\n      if (this._usePushState) {\r\n        addEventListener('popstate', this.checkUrl, false);\r\n      } else if (this._useHashChange && !this.iframe) {\r\n        addEventListener('hashchange', this.checkUrl, false);\r\n      } else if (this._wantsHashChange) {\r\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\r\n      }\r\n\r\n      if (!this.options.silent) return this.loadUrl();\r\n    },\r\n\r\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\r\n    // but possibly useful for unit testing Routers.\r\n    stop: function() {\r\n      // Add a cross-platform `removeEventListener` shim for older browsers.\r\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\r\n        return detachEvent('on' + eventName, listener);\r\n      };\r\n\r\n      // Remove window listeners.\r\n      if (this._usePushState) {\r\n        removeEventListener('popstate', this.checkUrl, false);\r\n      } else if (this._useHashChange && !this.iframe) {\r\n        removeEventListener('hashchange', this.checkUrl, false);\r\n      }\r\n\r\n      // Clean up the iframe if necessary.\r\n      if (this.iframe) {\r\n        document.body.removeChild(this.iframe);\r\n        this.iframe = null;\r\n      }\r\n\r\n      // Some environments will throw when clearing an undefined interval.\r\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\r\n      History.started = false;\r\n    },\r\n\r\n    // Add a route to be tested when the fragment changes. Routes added later\r\n    // may override previous routes.\r\n    route: function(route, callback) {\r\n      this.handlers.unshift({route: route, callback: callback});\r\n    },\r\n\r\n    // Checks the current URL to see if it has changed, and if it has,\r\n    // calls `loadUrl`, normalizing across the hidden iframe.\r\n    checkUrl: function(e) {\r\n      var current = this.getFragment();\r\n\r\n      // If the user pressed the back button, the iframe's hash will have\r\n      // changed and we should use that for comparison.\r\n      if (current === this.fragment && this.iframe) {\r\n        current = this.getHash(this.iframe.contentWindow);\r\n      }\r\n\r\n      if (current === this.fragment) return false;\r\n      if (this.iframe) this.navigate(current);\r\n      this.loadUrl();\r\n    },\r\n\r\n    // Attempt to load the current URL fragment. If a route succeeds with a\r\n    // match, returns `true`. If no defined routes matches the fragment,\r\n    // returns `false`.\r\n    loadUrl: function(fragment) {\r\n      // If the root doesn't match, no routes can match either.\r\n      if (!this.matchRoot()) return false;\r\n      fragment = this.fragment = this.getFragment(fragment);\r\n      return _.some(this.handlers, function(handler) {\r\n        if (handler.route.test(fragment)) {\r\n          handler.callback(fragment);\r\n          return true;\r\n        }\r\n      });\r\n    },\r\n\r\n    // Save a fragment into the hash history, or replace the URL state if the\r\n    // 'replace' option is passed. You are responsible for properly URL-encoding\r\n    // the fragment in advance.\r\n    //\r\n    // The options object can contain `trigger: true` if you wish to have the\r\n    // route callback be fired (not usually desirable), or `replace: true`, if\r\n    // you wish to modify the current URL without adding an entry to the history.\r\n    navigate: function(fragment, options) {\r\n      if (!History.started) return false;\r\n      if (!options || options === true) options = {trigger: !!options};\r\n\r\n      // Normalize the fragment.\r\n      fragment = this.getFragment(fragment || '');\r\n\r\n      // Don't include a trailing slash on the root.\r\n      var rootPath = this.root;\r\n      if (fragment === '' || fragment.charAt(0) === '?') {\r\n        rootPath = rootPath.slice(0, -1) || '/';\r\n      }\r\n      var url = rootPath + fragment;\r\n\r\n      // Strip the hash and decode for matching.\r\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\r\n\r\n      if (this.fragment === fragment) return;\r\n      this.fragment = fragment;\r\n\r\n      // If pushState is available, we use it to set the fragment as a real URL.\r\n      if (this._usePushState) {\r\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\r\n\r\n      // If hash changes haven't been explicitly disabled, update the hash\r\n      // fragment to store history.\r\n      } else if (this._wantsHashChange) {\r\n        this._updateHash(this.location, fragment, options.replace);\r\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\r\n          var iWindow = this.iframe.contentWindow;\r\n\r\n          // Opening and closing the iframe tricks IE7 and earlier to push a\r\n          // history entry on hash-tag change.  When replace is true, we don't\r\n          // want this.\r\n          if (!options.replace) {\r\n            iWindow.document.open();\r\n            iWindow.document.close();\r\n          }\r\n\r\n          this._updateHash(iWindow.location, fragment, options.replace);\r\n        }\r\n\r\n      // If you've told us that you explicitly don't want fallback hashchange-\r\n      // based history, then `navigate` becomes a page refresh.\r\n      } else {\r\n        return this.location.assign(url);\r\n      }\r\n      if (options.trigger) return this.loadUrl(fragment);\r\n    },\r\n\r\n    // Update the hash location, either replacing the current entry, or adding\r\n    // a new one to the browser history.\r\n    _updateHash: function(location, fragment, replace) {\r\n      if (replace) {\r\n        var href = location.href.replace(/(javascript:|#).*$/, '');\r\n        location.replace(href + '#' + fragment);\r\n      } else {\r\n        // Some browsers require that `hash` contains a leading #.\r\n        location.hash = '#' + fragment;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // Create the default Backbone.history.\r\n  Backbone.history = new History;\r\n\r\n  // Set up inheritance for the model, collection, router, view and history.\r\n  History.extend = Backbone.extend ;\r\n\r\n\r\n  return History;\r\n\r\n});\r\n\r\n\ndefine('skylark-backbone/Router',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,_,Backbone,events,helper){\r\n\r\n  // Backbone.Router\r\n  // ---------------\r\n\r\n  // Routers map faux-URLs to actions, and fire events when routes are\r\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\r\n  var Router = Backbone.Router = events.BackboneEvented.inherit({\r\n    _construct : function(options) {\r\n        options || (options = {});\r\n        if (options.routes) this.routes = options.routes;\r\n        this._bindRoutes();\r\n        this.initialize.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n\r\n  // Cached regular expressions for matching named param parts and splatted\r\n  // parts of route strings.\r\n  var optionalParam = /\\((.*?)\\)/g;\r\n  var namedParam    = /(\\(\\?)?:\\w+/g;\r\n  var splatParam    = /\\*\\w+/g;\r\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\r\n\r\n  // Set up all inheritable **Backbone.Router** properties and methods.\r\n  Router.partial({\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // Manually bind a single named route to a callback. For example:\r\n    //\r\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\r\n    //       ...\r\n    //     });\r\n    //\r\n    route: function(route, name, callback) {\r\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\r\n      if (_.isFunction(name)) {\r\n        callback = name;\r\n        name = '';\r\n      }\r\n      if (!callback) callback = this[name];\r\n      var router = this;\r\n      Backbone.history.route(route, function(fragment) {\r\n        var args = router._extractParameters(route, fragment);\r\n        if (router.execute(callback, args, name) !== false) {\r\n          router.trigger.apply(router, ['route:' + name].concat(args));\r\n          router.trigger('route', name, args);\r\n          Backbone.history.trigger('route', router, name, args);\r\n        }\r\n      });\r\n      return this;\r\n    },\r\n\r\n    // Execute a route handler with the provided parameters.  This is an\r\n    // excellent place to do pre-route setup or post-route cleanup.\r\n    execute: function(callback, args, name) {\r\n      if (callback) callback.apply(this, args);\r\n    },\r\n\r\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\r\n    navigate: function(fragment, options) {\r\n      Backbone.history.navigate(fragment, options);\r\n      return this;\r\n    },\r\n\r\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\r\n    // order of the routes here to support behavior where the most general\r\n    // routes can be defined at the bottom of the route map.\r\n    _bindRoutes: function() {\r\n      if (!this.routes) return;\r\n      this.routes = _.result(this, 'routes');\r\n      var route, routes = _.keys(this.routes);\r\n      while ((route = routes.pop()) != null) {\r\n        this.route(route, this.routes[route]);\r\n      }\r\n    },\r\n\r\n    // Convert a route string into a regular expression, suitable for matching\r\n    // against the current location hash.\r\n    _routeToRegExp: function(route) {\r\n      route = route.replace(escapeRegExp, '\\\\$&')\r\n                   .replace(optionalParam, '(?:$1)?')\r\n                   .replace(namedParam, function(match, optional) {\r\n                     return optional ? match : '([^/?]+)';\r\n                   })\r\n                   .replace(splatParam, '([^?]*?)');\r\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\r\n    },\r\n\r\n    // Given a route, and a URL fragment that it matches, return the array of\r\n    // extracted decoded parameters. Empty or unmatched parameters will be\r\n    // treated as `null` to normalize cross-browser behavior.\r\n    _extractParameters: function(route, fragment) {\r\n      var params = route.exec(fragment).slice(1);\r\n      return _.map(params, function(param, i) {\r\n        // Don't decode the search params.\r\n        if (i === params.length - 1) return param || null;\r\n        return param ? decodeURIComponent(param) : null;\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  // Set up inheritance for the model, collection, router, view and history.\r\n  Router.extend = helper.extend;\r\n\r\n\r\n  return Router;\r\n\r\n});\r\n\r\n\ndefine('skylark-utils-dom/elmx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./query\"\r\n], function(dom, langx, datax, eventer, finder, fx, geom, noder, styler,$) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./elmx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pluginInstance = datax.data( elm, pluginName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, pluginName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            }\r\n\r\n            if (options) {\r\n                var args = slice.call(arguments,1);\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  this.each(function () {\r\n                    var  ret  = shortcut(this,options);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-backbone/View',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx, $,noder,plugins,_,Backbone,events,helper){\r\n  // Backbone.View\r\n  // -------------\r\n\r\n  // Backbone Views are almost more convention than they are actual code. A View\r\n  // is simply a JavaScript object that represents a logical chunk of UI in the\r\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\r\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\r\n  // UI as a **View** allows you to define your DOM events declaratively, without\r\n  // having to worry about render order ... and makes it easy for the view to\r\n  // react to specific changes in the state of your models.\r\n\r\n  // Creating a Backbone.View creates its initial element outside of the DOM,\r\n  // if an existing element is not provided...\r\n\r\n    var View = Backbone.View = plugins.Plugin.inherit({\r\n      _construct :function(options) {\r\n          this.cid = _.uniqueId('view');\r\n          this.preinitialize.apply(this, arguments);\r\n          _.extend(this, _.pick(options, viewOptions));\r\n          this._ensureElement();\r\n          this.initialize.apply(this, arguments);\r\n\r\n      },\r\n\r\n      // The default `tagName` of a View's element is `\"div\"`.\r\n      tagName: 'div',\r\n\r\n      // query delegate for element lookup, scoped to DOM elements within the\r\n      // current view. This should be preferred to global lookups where possible.\r\n      $: function(selector) {\r\n        return this.$el.find(selector);\r\n      },\r\n\r\n      // preinitialize is an empty function by default. You can override it with a function\r\n      // or object.  preinitialize will run before any instantiation logic is run in the View\r\n      preinitialize: function(){},\r\n\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      // **render** is the core function that your view should override, in order\r\n      // to populate its element (`this.el`), with the appropriate HTML. The\r\n      // convention is for **render** to always return `this`.\r\n      render: function() {\r\n        return this;\r\n      },\r\n\r\n      // Remove this view by taking the element out of the DOM, and removing any\r\n      // applicable Backbone.Events listeners.\r\n      remove: function() {\r\n        this._removeElement();\r\n        this.unlistenTo();\r\n        return this;\r\n      },\r\n\r\n      // Remove this view's element from the document and all event listeners\r\n      // attached to it. Exposed for subclasses using an alternative DOM\r\n      // manipulation API.\r\n      _removeElement: function() {\r\n        this.$el.remove();\r\n      },\r\n\r\n      // Change the view's element (`this.el` property) and re-delegate the\r\n      // view's events on the new element.\r\n      setElement: function(element) {\r\n        this.undelegateEvents();\r\n        this._setElement(element);\r\n        this.delegateEvents();\r\n        return this;\r\n      },\r\n\r\n      // Creates the `this.el` and `this.$el` references for this view using the\r\n      // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n      // context or an element. Subclasses can override this to utilize an\r\n      // alternative DOM manipulation API and are only required to set the\r\n      // `this.el` property.\r\n      _setElement: function(el) {\r\n        this.$el = $(el);\r\n        this.el = this.$el[0];\r\n      },\r\n\r\n      // Set callbacks, where `this.events` is a hash of\r\n      //\r\n      // *{\"event selector\": \"callback\"}*\r\n      //\r\n      //     {\r\n      //       'mousedown .title':  'edit',\r\n      //       'click .button':     'save',\r\n      //       'click .open':       function(e) { ... }\r\n      //     }\r\n      //\r\n      // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n      // Uses event delegation for efficiency.\r\n      // Omitting the selector binds the event to `this.el`.\r\n      delegateEvents: function(events) {\r\n        events || (events = langx.result(this, 'events'));\r\n        if (!events) return this;\r\n        this.undelegateEvents();\r\n        for (var key in events) {\r\n          var method = events[key];\r\n          if (!langx.isFunction(method)) method = this[method];\r\n          if (!method) continue;\r\n          var match = key.match(delegateEventSplitter);\r\n          this.delegate(match[1], match[2], langx.proxy(method, this));\r\n        }\r\n        return this;\r\n      },\r\n\r\n      // Add a single event listener to the view's element (or a child element\r\n      // using `selector`). This only works for delegate-able events: not `focus`,\r\n      // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n      delegate: function(eventName, selector, listener) {\r\n        this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n      // You usually don't need to use this, but may wish to if you have multiple\r\n      // Backbone views attached to the same DOM element.\r\n      undelegateEvents: function() {\r\n        if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n        return this;\r\n      },\r\n\r\n      // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n      // `selector` and `listener` are both optional.\r\n      undelegate: function(eventName, selector, listener) {\r\n        this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Produces a DOM element to be assigned to your view. Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _createElement: function(tagName,attrs) {\r\n        return noder.createElement(tagName,attrs);\r\n      },\r\n\r\n      // Ensure that the View has a DOM element to render into.\r\n      // If `this.el` is a string, pass it through `$()`, take the first\r\n      // matching element, and re-assign it to `el`. Otherwise, create\r\n      // an element from the `id`, `className` and `tagName` properties.\r\n      _ensureElement: function() {\r\n        if (!this.el) {\r\n          var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n          if (this.id) attrs.id = langx.result(this, 'id');\r\n          if (this.className) attrs['class'] = langx.result(this, 'className');\r\n          this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n          this._setAttributes(attrs);\r\n        } else {\r\n          this.setElement(langx.result(this, 'el'));\r\n        }\r\n      },\r\n\r\n      // Set attributes from a hash on this view's element.  Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _setAttributes: function(attributes) {\r\n        this.$el.attr(attributes);\r\n      },\r\n      \r\n    });\r\n\r\n\r\n  View.partial(events.EventExtends);\r\n\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n  // List of view options to be set as properties.\r\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\r\n\r\n  View.extend = helper.extend;\r\n\r\n  return View;\r\n});\ndefine('skylark-backbone/main',[\r\n\t\"./backbone\",\r\n\t\"./events\",\r\n\t\"./Collection\",\r\n\t\"./Model\",\r\n\t\"./History\",\r\n\t\"./Router\",\r\n\t\"./View\"\r\n],function(backbone){\r\n\treturn backbone;\r\n});\ndefine('skylark-backbone', ['skylark-backbone/main'], function (main) { return main; });\n\n"]}